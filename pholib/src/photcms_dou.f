c
c  this is a version where the charm contribution has been explicitely
c  included ( fermilab, july 20, 1989 )
c
c                  *********************************
c
c  it includes the correction terms for the usual ms-bar gluon conventio
c  i.e. assuming the sum over initial gluon polar. states is 2*(1-eps)
c  and not 2 as was assumed in the scoonship program. this is achieved
c  by modiying lsq in subroutines fbd,fbf,fbj,fbk and adding some terms
c  in fba and fbc
c
c                           (january  1992)
c                  **********************************
c
      DOUBLE PRECISION FUNCTION FBA12(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BA5=
     1 +CF*NC**(-1)*LV*(3.+V**(-1)-2.*V**(-1)*W+2.*V**(-1)*W**2-3.*V1+6
     1 .*V1*W-8.*V1*W**2-2.*V1*X1**(-1)+3.*V1**2+2.*V1**2*W**2-2.*W+2.*
     1 W**2)
     1 +CF*NC**(-1)*LV*X2**(-3)*(-2.*V1**3)
     1 +CF*NC**(-1)*LV*X2**(-3)*DPQ*(2.*V1**3)
      BA5 = BA5
     1 +CF*NC**(-1)*LV*X2**(-2)*(2.*V1**2+2.*V1**3)
     1 +CF*NC**(-1)*LV*X2**(-2)*DPQ*(-2.*V1**2-2.*V1**3)
     1 +CF*NC**(-1)*LV*X2**(-1)*(-2.*V1-2.*V1**2-V1**3)
     1 +CF*NC**(-1)*LV*X2**(-1)*DPQ*(2.*V1+2.*V1**2+V1**3)
     1 +CF*NC**(-1)*LV*FQQ*(-1.+V1+V1*W+2.*V1*W**2+2.*V1*X1**(-1)-2.*V1
     1 **2-V1**2*W-V1**2*W**2-W**2)
      BA5 = BA5
     1 +CF*NC**(-1)*LV*DPQ*(-2.-3.*V1*W+2.*V1*W**2-V1**2+V1**2*W-V1**2*
     1 W**2+2.*W-W**2)
     1 +LV*(4.-4.*V**(-1)+2.*V**(-1)*W-2.*V**(-1)*W**2+4.*V**(-1)*W**(-
     1 1)-6.*V1+3.*V1*W-2.*V1*W**2+4.*V1*W**(-1)+6.*V1**2-3.*V1**2*W+2.
     1 *V1**2*W**2-4.*V1**2*W**(-1)-2.*W+2.*W**2-4.*W**(-1))
     1 +LV*X2**(-2)*(-2.*V1**2)
      BA5 = BA5
     1 +LV*X2**(-2)*DPQ*(2.*V1**2)
     1 +LV*X2**(-1)*(-2.*V1+2.*V1**2)
     1 +LV*X2**(-1)*DPQ*(2.*V1-2.*V1**2)
     1 +LV*DPQ*(-2.*V**(-1)*W**(-1)+2.*V1-V1*W-2.*V1*W**(-1)-2.*V1**2+V
     1 1**2*W+2.*V1**2*W**(-1)+2.*W**(-1))
C
       BA6=
     1 +CF*NC**(-1)*LX1*(-2.+2.*V1+2.*V1*W+4.*V1*W**2-6.*V1**2-2.*V1**2
     1 *W-2.*V1**2*W**2-2.*W**2)
     1 +LX1*(V1+V1**2)
C
       BA7=
     1 +CF*NC**(-1)*LX2*(-4.*V**(-1)*W1**(-1)+4.*V1-2.*V1*W+2.*V1*W1**(
     1 -1)-4.*V1**2+2.*V1**2*W+2.*V1**2*W1**(-1)+4.*W1**(-1))
     1 +CF*NC**(-1)*LX2*X2**(-3)*(-4.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-3)*DPQ*(4.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-2)*(4.*V1**2+4.*V1**3)
      BA7 = BA7
     1 +CF*NC**(-1)*LX2*X2**(-2)*DPQ*(-4.*V1**2-4.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-1)*(-4.*V1-4.*V1**2-2.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-1)*DPQ*(4.*V1+4.*V1**2+2.*V1**3)
     1 +CF*NC**(-1)*LX2*DPQ*(-4.-6.*V1*W+4.*V1*W**2-2.*V1**2+2.*V1**2*W
     1 -2.*V1**2*W**2+4.*W-2.*W**2)
      BA7 = BA7
     1 +LX2*(V**(-1)*W1**(-1)+V1-2.*V1*W1**(-1)+V1**2-W1**(-1))
     1 +LX2*X2**(-2)*(-4.*V1**2)
     1 +LX2*X2**(-2)*DPQ*(4.*V1**2)
     1 +LX2*X2**(-1)*(-4.*V1+4.*V1**2)
     1 +LX2*X2**(-1)*DPQ*(4.*V1-4.*V1**2)
     1 +LX2*DPQ*(-4.*V**(-1)*W**(-1)+4.*V1-2.*V1*W-4.*V1*W**(-1)-4.*V1*
     1 *2+2.*V1**2*W+4.*V1**2*W**(-1)+4.*W**(-1))
C
       BA8=
     1 +CF*NC**(-1)*LV1*(4.-6.*V1+6.*V1*W-8.*V1*W**2+10.*V1**2-2.*V1**2
     1 *W+4.*V1**2*W**2-4.*W+4.*W**2)
     1 +CF*NC**(-1)*LV1*FQQ*(1.-V1-V1*W-2.*V1*W**2-2.*V1*X1**(-1)+2.*V1
     1 **2+V1**2*W+V1**2*W**2+W**2)
     1 +LV1*(-2.+2.*V**(-1)-V1*W+2.*V1*W**2-4.*V1**2+V1**2*W-2.*V1**2*W
     1 **2)
C
       BA9=
     1 +CF*NC**(-1)*LW*(2.*V**(-1)*W1**(-1)-2.*V1-2.*V1*W-4.*V1*W**2+4.
     1 *V1**2+2.*V1**2*W+2.*V1**2*W**2-4.*V1**2*W1**(-1)+2.*W**2-2.*W1*
     1 *(-1))
      BA9 = BA9
     1 +CF*NC**(-1)*LW*FQG*(V**(-1)-2.*V**(-1)*W+2.*V**(-1)*W**2-2.*V1+
     1 4.*V1*W-4.*V1*W**2)
     1 +LW*(4.*V**(-1)*W**(-1)-5.*V1+5.*V1*W+4.*V1*W**(-1)+V1*W1**(-1)+
     1 3.*V1**2-5.*V1**2*W-4.*V1**2*W**(-1)+V1**2*W1**(-1)-4.*W**(-1))
C
       BA10=
     1 +CF*NC**(-1)*LW1*(5.+V**(-1)-2.*V**(-1)*W+2.*V**(-1)*W**2-7.*V1+
     1 14.*V1*W-12.*V1*W**2-2.*V1*X1**(-1)+7.*V1**2-4.*V1**2*W+4.*V1**2
     1 *W**2-6.*W+4.*W**2)
     1 +CF*NC**(-1)*LW1*X2**(-3)*(-2.*V1**3)
     1 +CF*NC**(-1)*LW1*X2**(-3)*DPQ*(2.*V1**3)
     1 +CF*NC**(-1)*LW1*X2**(-2)*(2.*V1**2+2.*V1**3)
      BA10 = BA10
     1 +CF*NC**(-1)*LW1*X2**(-2)*DPQ*(-2.*V1**2-2.*V1**3)
     1 +CF*NC**(-1)*LW1*X2**(-1)*(-2.*V1-2.*V1**2-V1**3)
     1 +CF*NC**(-1)*LW1*X2**(-1)*DPQ*(2.*V1+2.*V1**2+V1**3)
     1 +CF*NC**(-1)*LW1*FQG*(-V**(-1)+2.*V**(-1)*W-2.*V**(-1)*W**2+2.*V
     1 1-4.*V1*W+4.*V1*W**2)
      BA10 = BA10
     1 +CF*NC**(-1)*LW1*FQQ*(-1.+V1+V1*W+2.*V1*W**2+2.*V1*X1**(-1)-2.*V
     1 1**2-V1**2*W-V1**2*W**2-W**2)
     1 +CF*NC**(-1)*LW1*DPQ*(-2.-3.*V1*W+2.*V1*W**2-V1**2+V1**2*W-V1**2
     1 *W**2+2.*W-W**2)
     1 +LW1*(4.-4.*V**(-1)+2.*V**(-1)*W-2.*V**(-1)*W**2+4.*V**(-1)*W**(
     1 -1)-7.*V1-2.*V1*W**2+4.*V1*W**(-1)+5.*V1**2+2.*V1**2*W**2-4.*V1*
     1 *2*W**(-1)-2.*W+2.*W**2-4.*W**(-1))
      BA10 = BA10
     1 +LW1*X2**(-2)*(-2.*V1**2)
     1 +LW1*X2**(-2)*DPQ*(2.*V1**2)
     1 +LW1*X2**(-1)*(-2.*V1+2.*V1**2)
     1 +LW1*X2**(-1)*DPQ*(2.*V1-2.*V1**2)
     1 +LW1*DPQ*(-2.*V**(-1)*W**(-1)+2.*V1-V1*W-2.*V1*W**(-1)-2.*V1**2+
     1 V1**2*W+2.*V1**2*W**(-1)+2.*W**(-1))
C
       BA11=-1.+V**(-1)-5.*V**(-1)*W+6.*V**(-1)*W**2+2.*V**(-1)*W**(-1)
     1 +3.*V1+4.*V1*W-4.*V1*W**2-2.*V1*W**(-1)-2.*V1*X1**(-1)+2.*V1**2-
     1 V1**2*W-2.*V1**2*W**(-1)+5.*W-6.*W**2-2.*W**(-1)
     1 +CF*NC**(-1)*(-1.+3.*V**(-1)+5.*V**(-1)*W-6.*V**(-1)*W**2-5.*V1-
     1 2.*V1*W+V1*W**2+2.*V1*X1**(-1)+3./2.*V1**2-2.*V1**2*W+3.*V1**2*W
     1 **2-5.*W+8.*W**2)
      BA11 = BA11
     1 +CF*NC**(-1)*X2**(-3)*(6.*V1**3)
     1 +CF*NC**(-1)*X2**(-3)*LDQ*(-2.*V1**3)
     1 +CF*NC**(-1)*X2**(-3)*DPQ*(-2.*V1**3)
     1 +CF*NC**(-1)*X2**(-2)*(-6.*V1**2-5.*V1**3)
     1 +CF*NC**(-1)*X2**(-2)*LDQ*(2.*V1**2+2.*V1**3)
     1 +CF*NC**(-1)*X2**(-2)*DPQ*(2.*V1**2+2.*V1**3)
      BA11 = BA11
     1 +CF*NC**(-1)*X2**(-1)*(V1+6.*V1**2-3.*V1**3)
     1 +CF*NC**(-1)*X2**(-1)*LDQ*(-2.*V1-2.*V1**2-V1**3)
     1 +CF*NC**(-1)*X2**(-1)*DPQ*(-2.*V1-2.*V1**2)
     1 +CF*NC**(-1)*LSQ*(1.+V**(-1)-2.*V**(-1)*W+2.*V**(-1)*W**2-3.*V1+
     1 3.*V1*W-6.*V1*W**2-2.*V1*X1**(-1)+2.*V1**2+V1**2*W+V1**2*W**2+W*
     1 *2)
      BA11 = BA11
     1 +CF*NC**(-1)*LDQ*(2.+3.*V1*W-2.*V1*W**2+V1**2-V1**2*W+V1**2*W**2
     1 -2.*W+W**2)
     1 +CF*NC**(-1)*LR*(-6.*V**(-1)*W1**(-1)+2.*V1*W1**(-1)+6.*V1**2*W1
     1 **(-1)+6.*W1**(-1))
     1 +CF*NC**(-1)*FQG*(-6.*V**(-1)*W+6.*V**(-1)*W**2+12.*V1*W-12.*V1*
     1 W**2)
      BA11 = BA11
     1 +CF*NC**(-1)*FQQ*(-3./2.+1./2.*V1+1./2.*V1*W+3.*V1*W**2-4.*V1*X1
     1 **(-1)+3./2.*V1**2-1./2.*V1**2*W-3./2.*V1**2*W**2-3./2.*W**2)
     1 +CF*NC**(-1)*DPQ*(2.+2.*V1*W-2.*W)
     1 +X2**(-2)*(4.*V1**2)
     1 +X2**(-2)*LDQ*(-2.*V1**2)
     1 +X2**(-2)*DPQ*(-2.*V1**2)
      BA11 = BA11
     1 +X2**(-1)*(-2.*V1-2.*V1**2)
     1 +X2**(-1)*LDQ*(-2.*V1+2.*V1**2)
     1 +X2**(-1)*DPQ*(-2.*V1+2.*V1**2)
      BA11 = BA11
     1 +LSQ*(4.-4.*V**(-1)+2.*V**(-1)*W-2.*V**(-1)*W**2+2.*V**(-1)*W**(
     1 -1)-4.*V1+2.*V1*W-2.*V1*W**2+2.*V1*W**(-1)+4.*V1**2-2.*V1**2*W+2
     1 .*V1**2*W**2-2.*V1**2*W**(-1)-2.*W+2.*W**2-2.*W**(-1))
      BA11 = BA11
     1 +LDQ*(2.*V**(-1)*W**(-1)-2.*V1+V1*W+2.*V1*W**(-1)+2.*V1**2-V1**2
     1 *W-2.*V1**2*W**(-1)-2.*W**(-1))
     1 +LR*(V**(-1)*W1**(-1)-3.*V1*W1**(-1)-V1**2*W1**(-1)-W1**(-1))
     1 +DPQ*(-2.*V1+4.*V1*W**(-1))+0.
c
c     adjust to ms-bar gluon spin conventions
      BA11 = BA11
     1 -CF*NC**(-1)*(W**2+(1.-W)**2)*(V+V1**2/V)
c
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ2(II)
10    CONTINUE
      FBA12 = ALFAS*ALFPI*TEMP * V * GG1 *
     1     (BA5+BA6+BA7+BA8+BA9+BA10+BA11)
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBA1(V)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
       include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BA1=
     1 +CF*NC**(-1)*   (7./2.-7./2.*V**(-1)+2./3.*V**(-1)*PI2-7./2.*V1
     1 -1./3.*V1*PI2+7./2.*V1**2-5./3.*V1**2*PI2-2./3.*PI2)
     1 +CF*NC**(-1)*   LV*(-3./2.+3./2.*V**(-1)-7./2.*V1+3./2.*V1**2)
     1 +CF*NC**(-1)*   LV*LV1*(2.-2.*V**(-1)+4.*V1**2)
     1 +CF*NC**(-1)*   LV*LV1*FQQ*(-2.+2.*V**(-1)+2.*V1-2.*V1**2)
     1 +CF*NC**(-1)*   LV*LSQ*(-2.+2.*V**(-1)+2.*V1-2.*V1**2)
     1 +CF*NC**(-1)*   LV*FQQ*(-3./2.+3./2.*V**(-1)+3./2.*V1-3./2.*V1*
     1 *2)
      BA1 = BA1
     1 +CF*NC**(-1)*   LV**2*(-2.+2.*V**(-1)+V1-3.*V1**2)
     1 +CF*NC**(-1)*   LV**2*FQQ*(1.-V**(-1)-V1+V1**2)
     1 +CF*NC**(-1)*   LV1*(4.*V1)
     1 +CF*NC**(-1)*   LV1*LSQ*(2.-2.*V**(-1)-2.*V1+2.*V1**2)
     1 +CF*NC**(-1)*   LV1*FQQ*(3./2.-3./2.*V**(-1)-3./2.*V1+3./2.*V1*
     1 *2)
      BA1 = BA1
     1 +CF*NC**(-1)*   LV1**2*(-2.+2.*V**(-1)-2.*V1-2.*V1**2)
     1 +CF*NC**(-1)*   LV1**2*FQQ*(1.-V**(-1)-V1+V1**2)
     1 +CF*NC**(-1)*   LSQ*(-3./2.+3./2.*V**(-1)+3./2.*V1-3./2.*V1**2)
     1 +CF*NC**(-1)*   FQQ*(-9./2.+9./2.*V**(-1)+1./3.*V**(-1)*PI2+9./
     1 2.*V1+1./3.*V1*PI2-9./2.*V1**2-1./3.*V1**2*PI2-1./3.*PI2)
     1 +NC**(-1)*NF*   LSQ*(1./3.-1./3.*V**(-1)-1./3.*V1+1./3.*V1**2)
     1 +NC**(-1)*NF*   LQC*(-1./3.+1./3.*V**(-1)+1./3.*V1-1./3.*V1**2)
      BA1 = BA1
     1 +   (1./2.*V1*PI2+1./2.*V1**2*PI2)
     1 +   LV*(V1)
     1 +   LV*LV1*(-V1-V1**2)
     1 +   LV**2*(1./2.*V1+1./2.*V1**2)
     1 +   LV1*(-2.*V1)
     1 +   LV1**2*(1./2.-1./2.*V**(-1)+3./2.*V1+1./2.*V1**2)
     1 +   LSQ*(-11./6.+11./6.*V**(-1)+11./6.*V1-11./6.*V1**2)
     1 +   LQC*(11./6.-11./6.*V**(-1)-11./6.*V1+11./6.*V1**2)
C
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ2(II)
10    CONTINUE
      FBA1 = ALFAS*ALFPI*TEMP * V * GG1 *
     1    BA1
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBA2(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BA2=
     1 +CF*NC**(-1)*(3./2.-3./2.*V**(-1)-3./2.*V1+3./2.*V1**2)
     1 +CF*NC**(-1)*LV*(-2.+2.*V**(-1)+2.*V1-2.*V1**2)
     1 +CF*NC**(-1)*LV*FQQ*(2.-2.*V**(-1)-2.*V1+2.*V1**2)
     1 +CF*NC**(-1)*LV1*FQQ*(-2.+2.*V**(-1)+2.*V1-2.*V1**2)
      BA2 = BA2
     1 +CF*NC**(-1)*LSQ*(-2.+2.*V**(-1)+2.*V1-2.*V1**2)
     1 +CF*NC**(-1)*FQQ*(-3./2.+3./2.*V**(-1)+3./2.*V1-3./2.*V1**2)
     1 +LV*(-2.+2.*V**(-1)+2.*V1-2.*V1**2)
     1 +LV1*(2.-2.*V**(-1)-2.*V1+2.*V1**2)
     1 +LSQ*(-2.+2.*V**(-1)+2.*V1-2.*V1**2)
C
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ2(II)
10    CONTINUE
      FBA2 = ALFAS*ALFPI*TEMP * V * GG1 *
     1    BA2
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBA3(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
         include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BA3=-4.+4.*V**(-1)+4.*V1-4.*V1**2
     1 +CF*NC**(-1)*(-2.+2.*V**(-1)+2.*V1-2.*V1**2)
     1 +CF*NC**(-1)*FQQ*(2.-2.*V**(-1)-2.*V1+2.*V1**2)
C
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ2(II)
10    CONTINUE
      FBA3 = ALFAS*ALFPI*TEMP * V * GG1 *
     1    BA3
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBC12(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BC5=
     1 +CF*NC**(-1)*LV*(3.-16.*V1+20.*V1*W-16.*V1*W**2-2.*V1*X1**(-2)+4
     1 .*V1*X1**(-1)+3.*V1**2-11.*V1**2*W+8.*V1**2*W**2+2.*V1**2*X1**(-
     1 3)-4.*V1**2*X1**(-2)+4.*V1**2*X1**(-1)-11.*W+8.*W**2+X1**(-1))
     1 +CF*NC**(-1)*LV*X2**(-3)*(2.*V1**3)
     1 +CF*NC**(-1)*LV*X2**(-3)*DPQ*(-2.*V1**3)
     1 +CF*NC**(-1)*LV*X2**(-2)*(-4.*V1**2-2.*V1**3)
      BC5 = BC5
     1 +CF*NC**(-1)*LV*X2**(-2)*DPQ*(4.*V1**2+2.*V1**3)
     1 +CF*NC**(-1)*LV*X2**(-1)*(4.*V1+4.*V1**2+V1**3)
     1 +CF*NC**(-1)*LV*X2**(-1)*DPQ*(-4.*V1-4.*V1**2-V1**3)
     1 +CF*NC**(-1)*LV*FQG*(4.*V1-2.*V1*W+2.*V1*X1**(-2)-4.*V1*X1**(-1)
     1 -2.*V1**2*X1**(-3)+4.*V1**2*X1**(-2)-4.*V1**2*X1**(-1)+2.*W-X1**
     1 (-1))
      BC5 = BC5
     1 +CF*NC**(-1)*LV*DPQ*(4.*V1-2.*V1*W+2.*V1**2*W)
     1 +LV*(-4.-2.*V1+3.*V1*W-8.*V1*W**2+12.*V1*W**3+2.*V1*X1**(-2)-2.*
     1 V1*X1**(-1)-2.*V1**2-V1**2*W-4.*V1**2*W**3-2.*V1**2*X1**(-3)+2.*
     1 V1**2*X1**(-2)+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.*V1**(-1)*W**3-1
     1 0.*W+16.*W**2-12.*W**3-2.*X1**(-1))
     1 +LV*X2**(-2)*(-2.*V1**2)
      BC5 = BC5
     1 +LV*X2**(-2)*DPQ*(2.*V1**2)
     1 +LV*X2**(-1)*(6.*V1+2.*V1**2)
     1 +LV*X2**(-1)*DPQ*(-6.*V1-2.*V1**2)
     1 +LV*DPQ*(4.+2.*V1-V1*W+8.*V1*W**2-6.*V1*W**3+V1**2*W-2.*V1**2*W*
     1 *2+2.*V1**2*W**3-4.*V1**(-1)*W+4.*V1**(-1)*W**2-2.*V1**(-1)*W**3
     1 +4.*W-10.*W**2+6.*W**3)
C
       BC6=
     1 +CF*NC**(-1)*LX1*(-12.*V1*W+8.*V1*W**2+6.*V1**2*W-4.*V1**2*W**2+
     1 6.*W-4.*W**2)
     1 +LX1*(2.+2.*V1-6.*V1*W+10.*V1*W**2-12.*V1*W**3+V1**2+3.*V1**2*W-
     1 V1**2*W**2+4.*V1**2*W**3-8.*V1**(-1)*W+8.*V1**(-1)*W**2-4.*V1**(
     1 -1)*W**3+11.*W-17.*W**2+12.*W**3)
C
       BC7=
     1 +CF*NC**(-1)*LX2*(-8.*V1-8.*V1*W+8.*V1*W**2+4.*V1*W1**(-1)+2.*V1
     1 **2*W-4.*V1**2*W**2-2.*V1**2*W1**(-1)+6.*W-4.*W**2-4.*W1**(-1))
     1 +CF*NC**(-1)*LX2*X2**(-3)*(4.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-3)*DPQ*(-4.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-2)*(-8.*V1**2-4.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-2)*DPQ*(8.*V1**2+4.*V1**3)
      BC7 = BC7
     1 +CF*NC**(-1)*LX2*X2**(-1)*(8.*V1+8.*V1**2+2.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-1)*DPQ*(-8.*V1-8.*V1**2-2.*V1**3)
     1 +CF*NC**(-1)*LX2*DPQ*(8.*V1-4.*V1*W+4.*V1**2*W)
     1 +LX2*(-9.-2.*V1-3.*V1*W-2.*V1*W**2-2.*V1*W1**(-1)+V1**2*W**2+3.*
     1 W+W**2+W1**(-1))
      BC7 = BC7
     1 +LX2*X2**(-2)*(-4.*V1**2)
     1 +LX2*X2**(-2)*DPQ*(4.*V1**2)
     1 +LX2*X2**(-1)*(12.*V1+4.*V1**2)
     1 +LX2*X2**(-1)*DPQ*(-12.*V1-4.*V1**2)
     1 +LX2*DPQ*(8.+4.*V1-2.*V1*W+16.*V1*W**2-12.*V1*W**3+2.*V1**2*W-4.
     1 *V1**2*W**2+4.*V1**2*W**3-8.*V1**(-1)*W+8.*V1**(-1)*W**2-4.*V1**
     1 (-1)*W**3+8.*W-20.*W**2+12.*W**3)
C
       BC8=
     1 +CF*NC**(-1)*LV1*(-2.+4.*V1+4.*V1*W-2.*V1**2-2.*V1**2*W-2.*W)
     1 +CF*NC**(-1)*LV1*FQG*(-4.*V1+2.*V1*W-2.*V1*X1**(-2)+4.*V1*X1**(-
     1 1)+2.*V1**2*X1**(-3)-4.*V1**2*X1**(-2)+4.*V1**2*X1**(-1)-2.*W+X1
     1 **(-1))
      BC8 = BC8
     1 +LV1*(-2.*V1+8.*V1*W-16.*V1*W**2+12.*V1*W**3+V1**2-4.*V1**2*W+4.
     1 *V1**2*W**2-4.*V1**2*W**3+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.*V1**
     1 (-1)*W**3-12.*W+20.*W**2-12.*W**3)
C
       BC9=
     1 +CF*NC**(-1)*LW*(-2.+4.*V1+16.*V1*W-8.*V1*W**2-8.*V1*W1**(-1)-2.
     1 *V1**2-8.*V1**2*W+4.*V1**2*W**2+6.*V1**2*W1**(-1)-8.*W+4.*W**2+6
     1 .*W1**(-1))
      BC9 = BC9
     1 +CF*NC**(-1)*LW*FQQ*(-1.-V1**2-V1**2*W+2.*V1**2*W1**(-1)-W+2.*W1
     1 **(-1))
     1 +LW*(1.-4.*V1-5.*V1*W+2.*V1*W**2+4.*V1*W1**(-1)+V1**2+4.*V1**2*W
     1 -V1**2*W**2-3.*V1**2*W1**(-1)+2.*V1**2*X1**(-1)+W-W**2-3.*W1**(-
     1 1)+2.*X1**(-1))
C
       BC10=
     1 +CF*NC**(-1)*LW1*(1.-12.*V1+12.*V1*W-8.*V1*W**2-2.*V1*X1**(-2)+4
     1 .*V1*X1**(-1)+V1**2-7.*V1**2*W+4.*V1**2*W**2+2.*V1**2*X1**(-3)-4
     1 .*V1**2*X1**(-2)+4.*V1**2*X1**(-1)-7.*W+4.*W**2+X1**(-1))
     1 +CF*NC**(-1)*LW1*X2**(-3)*(2.*V1**3)
     1 +CF*NC**(-1)*LW1*X2**(-3)*DPQ*(-2.*V1**3)
     1 +CF*NC**(-1)*LW1*X2**(-2)*(-4.*V1**2-2.*V1**3)
      BC10 = BC10
     1 +CF*NC**(-1)*LW1*X2**(-2)*DPQ*(4.*V1**2+2.*V1**3)
     1 +CF*NC**(-1)*LW1*X2**(-1)*(4.*V1+4.*V1**2+V1**3)
     1 +CF*NC**(-1)*LW1*X2**(-1)*DPQ*(-4.*V1-4.*V1**2-V1**3)
     1 +CF*NC**(-1)*LW1*FQG*(4.*V1-2.*V1*W+2.*V1*X1**(-2)-4.*V1*X1**(-1
     1 )-2.*V1**2*X1**(-3)+4.*V1**2*X1**(-2)-4.*V1**2*X1**(-1)+2.*W-X1*
     1 *(-1))
      BC10 = BC10
     1 +CF*NC**(-1)*LW1*FQQ*(1.+V1**2+V1**2*W+W)
     1 +CF*NC**(-1)*LW1*DPQ*(4.*V1-2.*V1*W+2.*V1**2*W)
     1 +LW1*(-4.-2.*V1+5.*V1*W-10.*V1*W**2+12.*V1*W**3+2.*V1*X1**(-2)-2
     1 .*V1*X1**(-1)-2.*V1**2-4.*V1**2*W+V1**2*W**2-4.*V1**2*W**3-2.*V1
     1 **2*X1**(-3)+2.*V1**2*X1**(-2)-2.*V1**2*X1**(-1)+8.*V1**(-1)*W-8
     1 .*V1**(-1)*W**2+4.*V1**(-1)*W**3-9.*W+17.*W**2-12.*W**3-4.*X1**(
     1 -1))
      BC10 = BC10
     1 +LW1*X2**(-2)*(-2.*V1**2)
     1 +LW1*X2**(-2)*DPQ*(2.*V1**2)
     1 +LW1*X2**(-1)*(6.*V1+2.*V1**2)
     1 +LW1*X2**(-1)*DPQ*(-6.*V1-2.*V1**2)
     1 +LW1*DPQ*(4.+2.*V1-V1*W+8.*V1*W**2-6.*V1*W**3+V1**2*W-2.*V1**2*W
     1 **2+2.*V1**2*W**3-4.*V1**(-1)*W+4.*V1**(-1)*W**2-2.*V1**(-1)*W**
     1 3+4.*W-10.*W**2+6.*W**3)
C
       BC11=+1.-V1-4.*V1*W**2+6.*V1*W**3-5.*V1*X1**(-2)+8.*V1*X1**(-1)-
     1 V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3+6.*V1**2*X1**(-3)-10.*V1**2*
     1 X1**(-2)+4.*V1**2*X1**(-1)+2.*V1**(-1)*W**3-W+2.*W**2-6.*W**3+X1
     1 **(-1)
     1 +CF*NC**(-1)*(3./2.+8.*V1+9.*V1*W+5.*V1*X1**(-2)-9.*V1*X1**(-1)+
     1 3./2.*V1**2-7./2.*V1**2*W-6.*V1**2*X1**(-3)+12.*V1**2*X1**(-2)-7
     1 .*V1**2*X1**(-1)-7./2.*W+3.*X1**(-1))
      BC11 = BC11
     1 +CF*NC**(-1)*X2**(-3)*(-6.*V1**3)
     1 +CF*NC**(-1)*X2**(-3)*LDQ*(2.*V1**3)
     1 +CF*NC**(-1)*X2**(-3)*DPQ*(2.*V1**3)
     1 +CF*NC**(-1)*X2**(-2)*(12.*V1**2+5.*V1**3)
     1 +CF*NC**(-1)*X2**(-2)*LDQ*(-4.*V1**2-2.*V1**3)
     1 +CF*NC**(-1)*X2**(-2)*DPQ*(-4.*V1**2-2.*V1**3)
     1 +CF*NC**(-1)*X2**(-1)*(-7.*V1-9.*V1**2+3.*V1**3)
      BC11 = BC11
     1 +CF*NC**(-1)*X2**(-1)*LDQ*(4.*V1+4.*V1**2+V1**3)
     1 +CF*NC**(-1)*X2**(-1)*DPQ*(4.*V1+4.*V1**2)
     1 +CF*NC**(-1)*LSQ*(-1.-4.*V1+2.*V1*W-2.*V1*X1**(-2)+4.*V1*X1**(-1
     1 )-V1**2-V1**2*W+2.*V1**2*X1**(-3)-4.*V1**2*X1**(-2)+4.*V1**2*X1*
     1 *(-1)-3.*W+X1**(-1))
      BC11 = BC11
     1 +CF*NC**(-1)*LDQ*(-4.*V1+2.*V1*W-2.*V1**2*W)
     1 +CF*NC**(-1)*LR*(4.*V1*W1**(-1)-4.*V1**2*W1**(-1)-2.*W1**(-1))
     1 +CF*NC**(-1)*FQG*(-12.*V1-6.*V1*X1**(-2)+12.*V1*X1**(-1)+6.*V1**
     1 2*X1**(-3)-12.*V1**2*X1**(-2)+12.*V1**2*X1**(-1))
     1 +CF*NC**(-1)*FQQ*(-3.-3.*V1**2-2.*V1**2*W-2.*W)
     1 +CF*NC**(-1)*DPQ*(-4.*V1)
      BC11 = BC11
     1 +X2**(-2)*(4.*V1**2)
     1 +X2**(-2)*LDQ*(-2.*V1**2)
     1 +X2**(-2)*DPQ*(-2.*V1**2)
     1 +X2**(-1)*(-6.*V1-2.*V1**2)
     1 +X2**(-1)*LDQ*(6.*V1+2.*V1**2)
     1 +X2**(-1)*DPQ*(6.*V1+2.*V1**2)
      BC11 = BC11
     1 +LSQ*(2.+6.*V1*W-8.*V1*W**2+6.*V1*W**3+2.*V1*X1**(-2)-2.*V1*X1**
     1 (-1)-4.*V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3-2.*V1**2*X1**(-3)+2.
     1 *V1**2*X1**(-2)-2.*V1**2*X1**(-1)+4.*V1**(-1)*W-4.*V1**(-1)*W**2
     1 +2.*V1**(-1)*W**3-6.*W+10.*W**2-6.*W**3-4.*X1**(-1))
      BC11 = BC11
     1 +LDQ*(-4.-2.*V1+V1*W-8.*V1*W**2+6.*V1*W**3-V1**2*W+2.*V1**2*W**2
     1 -2.*V1**2*W**3+4.*V1**(-1)*W-4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-4
     1 .*W+10.*W**2-6.*W**3)
     1 +LR*(-2.*V1*W1**(-1)-V1**2*W1**(-1)-2.*W1**(-1))
     1 +DPQ*(-4.-2.*V1-4.*V1*W**2+4.*V1**(-1)*W-4.*V1**(-1)*W**2-4.*W+8
     1 .*W**2)+0.
c
c     adjust to ms-bar gluon spin conventions
      ZQ=V1/X1
      BC11 = BC11
     1 -CF*NC**(-1)*(ZQ**2+(1.-ZQ)**2)*(X1+VW**2/X1)
c
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ1(II)
10    CONTINUE
      FBC12 = ALFAS*ALFPI*TEMP * V * GG2 *
     1    (BC5+BC6+BC7+BC8+BC9+BC10+BC11)
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBC1(V)
      implicit real*8(a-h,o-z)
 	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BC1=
     1 +CF*NC**(-1)*   (-7./2.-2.*V1*PI2-7./2.*V1**2+5./3.*V1**2*PI2+2
     1 ./3.*PI2)
     1 +CF*NC**(-1)*   LV*(-3./2.+4.*V1-3./2.*V1**2)
     1 +CF*NC**(-1)*   LV*LV1*(-2.+4.*V1-4.*V1**2)
     1 +CF*NC**(-1)*   LV**2*(3.-4.*V1+3.*V1**2)
      BC1 = BC1
     1 +CF*NC**(-1)*   LV1*(3.-2.*V1)
     1 +CF*NC**(-1)*   LV1**2*(1.-2.*V1+2.*V1**2)
     1 +CF*NC**(-1)*   LSQ*(3./2.+3./2.*V1**2)
     1 +CF*NC**(-1)*   FQQ*(9./2.+9./2.*V1**2+1./3.*V1**2*PI2+1./3.*PI
     1 2)
      BC1 = BC1
     1 +NC**(-1)*NF*   LSQ*(-1./3.-1./3.*V1**2)
     1 +NC**(-1)*NF*   LQC*(1./3.+1./3.*V1**2)
     1 +   (V1*PI2-1./2.*V1**2*PI2)
     1 +   LV*(-2.*V1)
     1 +   LV*LV1*(-2.*V1+V1**2)
     1 +   LV*LSQ*(2.+2.*V1**2)
      BC1 = BC1
     1 +   LV**2*(-1./2.+2.*V1-1./2.*V1**2)
     1 +   LV1*(V1)
     1 +   LV1*LSQ*(-2.-2.*V1**2)
     1 +   LV1**2*(V1-1./2.*V1**2)
     1 +   LSQ*(11./6.+11./6.*V1**2)
     1 +   LQC*(-11./6.-11./6.*V1**2)
C
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ1(II)
10    CONTINUE
      FBC1 = ALFAS*ALFPI*TEMP * V * GG2 *
     1    BC1
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBC2(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
	include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BC2=
     1 +CF*NC**(-1)*(-3./2.-3./2.*V1**2)
     1 +CF*NC**(-1)*LV*(2.+2.*V1**2)
     1 +CF*NC**(-1)*LSQ*(2.+2.*V1**2)
     1 +CF*NC**(-1)*FQQ*(3./2.+3./2.*V1**2)
     1 +LV*(2.+2.*V1**2)
     1 +LV1*(-2.-2.*V1**2)
     1 +LSQ*(2.+2.*V1**2)
C
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ1(II)
10    CONTINUE
      FBC2 = ALFAS*ALFPI*TEMP * V * GG2 *
     1    BC2
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBC3(V,W)
      implicit real*8(a-h,o-z)
 	include "vari.f"
       include "facto.f"
	include "qcd.f"
       include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BC3=+4.+4.*V1**2
     1 +CF*NC**(-1)*(2.+2.*V1**2)
     1 +CF*NC**(-1)*FQQ*(-2.-2.*V1**2)
C
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ1(II)
10    CONTINUE
      FBC3 = ALFAS*ALFPI*TEMP * V * GG2 *
     1    BC3
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBB12(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
       include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BB5=
     1 +CF**2*NC**(-1)*LV*(-2.*V**(-1)-2.*V**(-1)*W+8.*V1+8.*V1*W-2.*V1
     1 *X1**(-2)+4.*V1*X1**(-1)-4.*W-2.*X1**(-1))
     1 +CF**2*NC**(-1)*LV*FQQ*(-4.*V1-4.*V1*W+2.*V1*X1**(-2)-4.*V1*X1**
     1 (-1)+4.*W+2.*X1**(-1))
C
       BB6=
     1 +CF*LX1*(2.+2.*V1+2.*V1*W-2.*W)
     1 +CF**2*NC**(-1)*LX1*(-8.*V1-8.*V1*W+8.*W)
C
       BB7=0.
C
       BB8=
     1 +CF*LV1*(-2.+2.*V**(-1)-4.*V**(-1)*X1**(-1)+2.*V1+2.*V1*W+2.*V1*
     1 X1**(-1)+2.*X1**(-1))
     1 +CF**2*NC**(-1)*LV1*(-4.*V**(-1)+8.*V**(-1)*X1**(-1)-4.*V1*X1**(
     1 -1)-4.*W-4.*X1**(-1))
     1 +CF**2*NC**(-1)*LV1*FQQ*(4.*V1+4.*V1*W-2.*V1*X1**(-2)+4.*V1*X1**
     1 (-1)-4.*W-2.*X1**(-1))
C
       BB9=
     1 +CF*LW*(-2.+2.*V**(-1)+2.*V**(-1)*W1**(-1)-4.*V**(-1)*X1**(-1)+2
     1 .*V1+2.*V1*W-4.*V1*W1**(-1)+2.*V1*X1**(-1)+2.*X1**(-1))
     1 +CF**2*NC**(-1)*LW*(-4.*V**(-1)+8.*V**(-1)*X1**(-1)-4.*V1*X1**(-
     1 1)-4.*W-4.*X1**(-1))
     1 +CF**2*NC**(-1)*LW*FQQ*(-2.*V**(-1)-2.*V**(-1)*W+4.*V**(-1)*W1**
     1 (-1)+4.*V1+4.*V1*W-8.*V1*W1**(-1))
C
       BB10=
     1 +CF*LW1*(-2.*V**(-1)+4.*V**(-1)*X1**(-1)-4.*V1-4.*V1*W-2.*V1*X1*
     1 *(-1)+2.*W-2.*X1**(-1))
     1 +CF**2*NC**(-1)*LW1*(2.*V**(-1)-2.*V**(-1)*W-8.*V**(-1)*X1**(-1)
     1 +16.*V1+16.*V1*W-2.*V1*X1**(-2)+8.*V1*X1**(-1)-8.*W+2.*X1**(-1))
     1 +CF**2*NC**(-1)*LW1*FQQ*(2.*V**(-1)+2.*V**(-1)*W-8.*V1-8.*V1*W+2
     1 .*V1*X1**(-2)-4.*V1*X1**(-1)+4.*W+2.*X1**(-1))
C
       BB11=
     1 +CF*(-11./3.+3.*V**(-1)+V**(-1)*W-11./3.*V1-11./3.*V1*W+V1*X1**(
     1 -2)-4.*V1*X1**(-1)-1./3.*W+3.*X1**(-1))
     1 +CF*LR*(2.*V**(-1)*W1**(-1)-4.*V1*W1**(-1))
     1 +CF**2*NC**(-1)*(2.*V**(-1)*W-8.*V1+8.*V1*W+2.*V1*X1**(-2)+2.*V1
     1 *X1**(-1)-6.*W)
      BB11 = BB11
     1 +CF**2*NC**(-1)*LSQ*(-2.*V**(-1)-2.*V**(-1)*W+8.*V1+8.*V1*W-2.*V
     1 1*X1**(-2)+4.*V1*X1**(-1)-4.*W-2.*X1**(-1))
     1 +CF**2*NC**(-1)*LR*(-8.*V**(-1)*W1**(-1)+16.*V1*W1**(-1))
     1 +CF**2*NC**(-1)*FQQ*(-6.*V**(-1)-4.*V**(-1)*W+10.*V1+2.*V1*W-4.*
     1 V1*X1**(-2)+8.*V1*X1**(-1)+6.*W-6.*X1**(-1))+0.
      TEMP = 0.
      DO 10 II=1,6
      IF (II.LE.3) IIA = II+3
      IF (II.GT.3) IIA = II-3
      TEMP = TEMP + Q(II)**2 * QQ1(II) * QQ2(IIA)
10    CONTINUE
      TEMP= TEMP + Q(7)**2 * (QQ1(7)*QQ2(8) + QQ1(8)*QQ2(7))
      FBB12 = ALFAS*ALFPI*TEMP * V *
     1    (BB5+BB6+BB7+BB8+BB9+BB10+BB11)
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBB1(V)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
        include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BB1=
     1 +CF*NC**(-1)*NF  *  (-4./3.*V**(-1)+4./3.*V1)
     1 +CF*NC**(-1)*NF  *  LQC*(2./3.*V**(-1)-4./3.*V1)
     1 +CF  *  (67./9.*V**(-1)-2./3.*V**(-1)*PI2-134./9.*V1+4./3.*V1*PI
     1 2)
      BB1 = BB1
     1 +CF  *  LV*(-11./3.*V**(-1)+16./3.*V1)
     1 +CF  *  LV**2*(-1.-V1)
     1 +CF  *  LV1*(-2.*V1)
     1 +CF  *  LV1**2*(1.-3.*V**(-1)+3.*V1)
     1 +CF  *  LQC*(-11./3.*V**(-1)+22./3.*V1)
     1 +CF**2*NC**(-1)  *  (-14.*V**(-1)+2.*V**(-1)*PI2+28.*V1-4.*V1*PI
     1 2)
      BB1 = BB1
     1 +CF**2*NC**(-1)  *  LV*(-6.+6.*V**(-1)-2.*V1)
     1 +CF**2*NC**(-1)  *  LV*LV1*(-4.*V**(-1)+8.*V1)
     1 +CF**2*NC**(-1)  *  LV*LV1*FQQ*(4.*V**(-1)-8.*V1)
     1 +CF**2*NC**(-1)  *  LV*LSQ*(4.*V**(-1)-8.*V1)
     1 +CF**2*NC**(-1)  *  LV*FQQ*(3.*V**(-1)-6.*V1)
     1 +CF**2*NC**(-1)  *  LV**2*(2.+4.*V**(-1)-6.*V1)
      BB1 = BB1
     1 +CF**2*NC**(-1)  *  LV**2*FQQ*(-2.*V**(-1)+4.*V1)
     1 +CF**2*NC**(-1)  *  LV1*(6.-2.*V1)
     1 +CF**2*NC**(-1)  *  LV1*LSQ*(-4.*V**(-1)+8.*V1)
     1 +CF**2*NC**(-1)  *  LV1*FQQ*(-3.*V**(-1)+6.*V1)
     1 +CF**2*NC**(-1)  *  LV1**2*(-2.+6.*V**(-1)-6.*V1)
      BB1 = BB1
     1 +CF**2*NC**(-1)  *  LV1**2*FQQ*(-2.*V**(-1)+4.*V1)
     1 +CF**2*NC**(-1)  *  LSQ*(6.*V**(-1)-12.*V1)
     1 +CF**2*NC**(-1)  *  FQQ*(18.*V**(-1)+4./3.*V**(-1)*PI2-36.*V1-8.
     1 /3.*V1*PI2)
C
      TEMP = 0.
      DO 10 II=1,6
      IF (II.LE.3) IIA = II+3
      IF (II.GT.3) IIA = II-3
      TEMP = TEMP + Q(II)**2 * QQ1(II) * QQ2(IIA)
10    CONTINUE
      TEMP= TEMP + Q(7)**2 * (QQ1(7)*QQ2(8) + QQ1(8)*QQ2(7))
      FBB1 = ALFAS*ALFPI*TEMP * V *
     1    BB1
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBB2(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BB2=
     1 +CF*(-11./3.*V**(-1)+22./3.*V1)
     1 +CF*LV1*(4.*V**(-1)-8.*V1)
     1 +CF**2*NC**(-1)*LV*(8.*V**(-1)-16.*V1)
     1 +CF**2*NC**(-1)*LV*FQQ*(-4.*V**(-1)+8.*V1)
      BB2 = BB2
     1 +CF**2*NC**(-1)*LV1*(-8.*V**(-1)+16.*V1)
     1 +CF**2*NC**(-1)*LV1*FQQ*(4.*V**(-1)-8.*V1)
     1 +CF**2*NC**(-1)*LSQ*(8.*V**(-1)-16.*V1)
     1 +CF**2*NC**(-1)*FQQ*(6.*V**(-1)-12.*V1)
C
      TEMP = 0.D0
      DO 10 II=1,6
      IF (II.LE.3) IIA = II+3
      IF (II.GT.3) IIA = II-3
      TEMP = TEMP + Q(II)**2 * QQ1(II) * QQ2(IIA)
10    CONTINUE
      TEMP= TEMP + Q(7)**2 * (QQ1(7)*QQ2(8) + QQ1(8)*QQ2(7))
      FBB2 = ALFAS*ALFPI*TEMP * V *
     1    BB2
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBB3(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BB3=
     1 +CF*(-4.*V**(-1)+8.*V1)
     1 +CF**2*NC**(-1)*(16.*V**(-1)-32.*V1)
     1 +CF**2*NC**(-1)*FQQ*(-8.*V**(-1)+16.*V1)
C
      TEMP = 0.D0
      DO 10 II=1,6
      IF (II.LE.3) IIA =II+3
      IF (II.GT.3) IIA =II-3
      TEMP = TEMP + Q(II)**2 * QQ1(II) * QQ2(IIA)
10    CONTINUE
      TEMP= TEMP + Q(7)**2 * (QQ1(7)*QQ2(8) + QQ1(8)*QQ2(7))
      FBB3 = ALFAS*ALFPI*TEMP * V *
     1    BB3
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBD12(V,W)
      implicit real*8(a-h,o-z)
 	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
c
c     adjust to ms-bar gluon spin conventions
      LSQ=LSQ-1.
c
       BD5=
     1 +NC**(-1)*LV*(4.-4.*V1+4.*V1*W-4.*V1*W**2-8.*V1*X1**(-1)+4.*V1**
     1 2-4.*V1**2*W+4.*V1**2*W**2+4.*V1**2*X1**(-2)-8.*V2**(-1)*X1**(-1
     1 )-4.*W+4.*W**2+8.*X1**(-1))
     1 +NC**(-1)*LV*X2**(-2)*(4.*V1**2)
     1 +NC**(-1)*LV*X2**(-2)*DPQ*(-4.*V1**2)
     1 +NC**(-1)*LV*X2**(-1)*(8.-8.*V1-8.*V2**(-1))
     1 +NC**(-1)*LV*X2**(-1)*DPQ*(4.*V1+4.*V1**2)
      BD5 = BD5
     1 +NC**(-1)*LV*FQG*(-1.-2.*V1-2.*V1*W+2.*V1*W**2+4.*V1*X1**(-1)-2.
     1 *V1**2+2.*V1**2*W-V1**2*W**2-4.*V1**2*X1**(-2)+4.*V1**2*X1**(-1)
     1 -W**2)
     1 +NC**(-1)*LV*DPQ*(-2.-2.*V1-2.*V1*W+2.*V1*W**2-V1**2-V1**2*W**2+
     1 2.*W-W**2)
     1 +CF**(-1)*LV*(2.*V1+3.*V1*W+2.*V1*X1**(-1)+2.*V1**2-3.*V1**2*W-2
     1 .*V1**2*X1**(-1)+4.*V2**(-1)*X1**(-1)-4.*X1**(-1))
      BD5 = BD5
     1 +CF**(-1)*LV*X2**(-4)*(4.*V1**4)
     1 +CF**(-1)*LV*X2**(-4)*DPQ*(-4.*V1**4)
     1 +CF**(-1)*LV*X2**(-3)*(-8.*V1**3-4.*V1**4)
     1 +CF**(-1)*LV*X2**(-3)*DPQ*(8.*V1**3+4.*V1**4)
     1 +CF**(-1)*LV*X2**(-2)*(6.*V1**2+8.*V1**3+2.*V1**4)
      BD5 = BD5
     1 +CF**(-1)*LV*X2**(-2)*DPQ*(-6.*V1**2-8.*V1**3-2.*V1**4)
     1 +CF**(-1)*LV*X2**(-1)*(-4.+2.*V1-8.*V1**2-2.*V1**3+4.*V2**(-1))
     1 +CF**(-1)*LV*X2**(-1)*DPQ*(2.*V1+6.*V1**2+4.*V1**3)
     1 +CF**(-1)*LV*DPQ*(-2.*V1+V1*W-2.*V1**2-V1**2*W)
C
       BD6=
     1 +NC**(-1)*LX1*(-2.+4.*V1-4.*V1*W+4.*V1*W**2-4.*V1**2+4.*V1**2*W-
     1 2.*V1**2*W**2-2.*W**2)
C
       BD7=
     1 +NC**(-1)*LX2*(8.*V1)
     1 +NC**(-1)*LX2*X2**(-2)*(8.*V1**2)
     1 +NC**(-1)*LX2*X2**(-2)*DPQ*(-8.*V1**2)
     1 +NC**(-1)*LX2*X2**(-1)*(-8.*V1-8.*V1**2)
     1 +NC**(-1)*LX2*X2**(-1)*DPQ*(8.*V1+8.*V1**2)
     1 +NC**(-1)*LX2*DPQ*(-4.-4.*V1-4.*V1*W+4.*V1*W**2-2.*V1**2-2.*V1**
     1 2*W**2+4.*W-2.*W**2)
      BD7 = BD7
     1 +CF**(-1)*LX2*(4.*V1-6.*V1*W+4.*V1**2+6.*V1**2*W)
     1 +CF**(-1)*LX2*X2**(-4)*(8.*V1**4)
     1 +CF**(-1)*LX2*X2**(-4)*DPQ*(-8.*V1**4)
     1 +CF**(-1)*LX2*X2**(-3)*(-16.*V1**3-8.*V1**4)
     1 +CF**(-1)*LX2*X2**(-3)*DPQ*(16.*V1**3+8.*V1**4)
      BD7 = BD7
     1 +CF**(-1)*LX2*X2**(-2)*(12.*V1**2+16.*V1**3+4.*V1**4)
     1 +CF**(-1)*LX2*X2**(-2)*DPQ*(-12.*V1**2-16.*V1**3-4.*V1**4)
     1 +CF**(-1)*LX2*X2**(-1)*(-4.*V1-12.*V1**2-8.*V1**3)
     1 +CF**(-1)*LX2*X2**(-1)*DPQ*(4.*V1+12.*V1**2+8.*V1**3)
     1 +CF**(-1)*LX2*DPQ*(-4.*V1+2.*V1*W-4.*V1**2-2.*V1**2*W)
C
       BD8=
     1 +NC**(-1)*LV1*(-4.+8.*V**(-1)-4.*V**(-1)*X1**(-1)-4.*V1+4.*V1*W-
     1 4.*V1*W**2+4.*V1*X1**(-1)+2.*V1**2+4.*V2**(-1)*X1**(-1)-4.*W+4.*
     1 W**2)
     1 +NC**(-1)*LV1*X2**(-1)*(-4.*V**(-1)+4.*V1+4.*V2**(-1))
     1 +NC**(-1)*LV1*FQG*(1.+2.*V1+2.*V1*W-2.*V1*W**2-4.*V1*X1**(-1)+2.
     1 *V1**2-2.*V1**2*W+V1**2*W**2+4.*V1**2*X1**(-2)-4.*V1**2*X1**(-1)
     1 +W**2)
      BD8 = BD8
     1 +CF**(-1)*LV1*(4.-4.*V**(-1)+2.*V**(-1)*X1**(-1)+2.*V1+V1*W-2.*V
     1 1*W**2-2.*V1*X1**(-1)+2.*V1**2-V1**2*W+2.*V1**2*W**2-2.*V2**(-1)
     1 *X1**(-1))
     1 +CF**(-1)*LV1*X2**(-1)*(2.*V**(-1)-4.*V1-2.*V1**3-2.*V2**(-1))
C
       BD9=
     1 +NC**(-1)*LW*(-4.*V**(-1)*X1**(-1)-4.*V1+4.*V1*W-4.*V1*W**2+2.*V
     1 1**2*W**2+4.*V1**2*X1**(-1)-4.*V2**(-1)*X1**(-1)+2.*W**2+8.*X1**
     1 (-1))
     1 +NC**(-1)*LW*X2**(-1)*(4.*V**(-1)-4.*V1-4.*V2**(-1))
     1 +NC**(-1)*LW*FQG*(1.+V1**2-2.*V1**2*W+2.*V1**2*W**2-2.*W+2.*W**2
     1 )
      BD9 = BD9
     1 +CF**(-1)*LW*(2.*V**(-1)*X1**(-1)+V1*W-3.*V1**2*W-2.*V1**2*X1**(
     1 -1)+2.*V2**(-1)*X1**(-1)-4.*X1**(-1))
     1 +CF**(-1)*LW*X2**(-1)*(-2.*V**(-1)+4.*V1+2.*V1**3+2.*V2**(-1))
C
       BD10=
     1 +NC**(-1)*LW1*(6.+4.*V**(-1)*X1**(-1)+8.*V1*W-8.*V1*W**2-8.*V1*X
     1 1**(-1)+6.*V1**2-8.*V1**2*W+6.*V1**2*W**2+4.*V1**2*X1**(-2)-4.*V
     1 1**2*X1**(-1)-4.*V2**(-1)*X1**(-1)-8.*W+6.*W**2)
     1 +NC**(-1)*LW1*X2**(-2)*(4.*V1**2)
     1 +NC**(-1)*LW1*X2**(-2)*DPQ*(-4.*V1**2)
     1 +NC**(-1)*LW1*X2**(-1)*(8.-4.*V**(-1)-4.*V1-4.*V2**(-1))
     1 +NC**(-1)*LW1*X2**(-1)*DPQ*(4.*V1+4.*V1**2)
      BD10 = BD10
     1 +NC**(-1)*LW1*FQG*(-2.-2.*V1-2.*V1*W+2.*V1*W**2+4.*V1*X1**(-1)-3
     1 .*V1**2+4.*V1**2*W-3.*V1**2*W**2-4.*V1**2*X1**(-2)+4.*V1**2*X1**
     1 (-1)+2.*W-3.*W**2)
     1 +NC**(-1)*LW1*DPQ*(-2.-2.*V1-2.*V1*W+2.*V1*W**2-V1**2-V1**2*W**2
     1 +2.*W-W**2)
     1 +CF**(-1)*LW1*(-2.*V**(-1)*X1**(-1)+2.*V1+2.*V1*W+2.*V1*X1**(-1)
     1 +2.*V1**2+2.*V2**(-1)*X1**(-1))
      BD10 = BD10
     1 +CF**(-1)*LW1*X2**(-4)*(4.*V1**4)
     1 +CF**(-1)*LW1*X2**(-4)*DPQ*(-4.*V1**4)
     1 +CF**(-1)*LW1*X2**(-3)*(-8.*V1**3-4.*V1**4)
     1 +CF**(-1)*LW1*X2**(-3)*DPQ*(8.*V1**3+4.*V1**4)
     1 +CF**(-1)*LW1*X2**(-2)*(6.*V1**2+8.*V1**3+2.*V1**4)
     1 +CF**(-1)*LW1*X2**(-2)*DPQ*(-6.*V1**2-8.*V1**3-2.*V1**4)
     1 +CF**(-1)*LW1*X2**(-1)*(-4.+2.*V**(-1)-2.*V1-8.*V1**2-4.*V1**3+2
     1 .*V2**(-1))
      BD10 = BD10
     1 +CF**(-1)*LW1*X2**(-1)*DPQ*(2.*V1+6.*V1**2+4.*V1**3)
     1 +CF**(-1)*LW1*DPQ*(-2.*V1+V1*W-2.*V1**2-V1**2*W)
C
       BD11=
     1 +NC**(-1)*(2.-4.*V1*W**2+2.*V1**2+2.*V1**2*W**2+2.*W**2)
     1 +NC**(-1)*X2**(-2)*DPQ*(4.*V1**2)
     1 +NC**(-1)*X2**(-2)*LDQ*(4.*V1**2)
     1 +NC**(-1)*X2**(-1)*DPQ*(-4.*V1-4.*V1**2)
     1 +NC**(-1)*X2**(-1)*LDQ*(-4.*V1-4.*V1**2)
      BD11 = BD11
     1 +NC**(-1)*LSQ*(2.+2.*V1+2.*V1*W-2.*V1*W**2-4.*V1*X1**(-1)+3.*V1*
     1 *2-4.*V1**2*W+3.*V1**2*W**2+4.*V1**2*X1**(-2)-4.*V1**2*X1**(-1)-
     1 2.*W+3.*W**2)
     1 +NC**(-1)*FQG*(6.*V1+6.*V1*W-12.*V1*X1**(-1)+6.*V1**2-12.*V1**2*
     1 W+6.*V1**2*W**2+12.*V1**2*X1**(-2)-12.*V1**2*X1**(-1)-6.*W+6.*W*
     1 *2)
      BD11 = BD11
     1 +NC**(-1)*DPQ*(2.+2.*V1+2.*V1*W-2.*W)
     1 +NC**(-1)*LDQ*(2.+2.*V1+2.*V1*W-2.*V1*W**2+V1**2+V1**2*W**2-2.*W
     1 +W**2)
     1 +CF**(-1)*(-4.*V1+V1*W-2.*V1*W**2+2.*V1*X1**(-1)-2.*V1**2+V1**2*
     1 W-2.*V1**2*W**2-4.*V1**2*X1**(-2)+6.*V1**2*X1**(-1))
      BD11 = BD11
     1 +CF**(-1)*X2**(-4)*(-12.*V1**4)
     1 +CF**(-1)*X2**(-4)*DPQ*(4.*V1**4)
     1 +CF**(-1)*X2**(-4)*LDQ*(4.*V1**4)
     1 +CF**(-1)*X2**(-3)*(24.*V1**3+12.*V1**4)
     1 +CF**(-1)*X2**(-3)*DPQ*(-8.*V1**3-4.*V1**4)
     1 +CF**(-1)*X2**(-3)*LDQ*(-8.*V1**3-4.*V1**4)
     1 +CF**(-1)*X2**(-2)*(-14.*V1**2-24.*V1**3)
      BD11 = BD11
     1 +CF**(-1)*X2**(-2)*DPQ*(6.*V1**2+8.*V1**3)
     1 +CF**(-1)*X2**(-2)*LDQ*(6.*V1**2+8.*V1**3+2.*V1**4)
     1 +CF**(-1)*X2**(-1)*(2.*V1+14.*V1**2)
     1 +CF**(-1)*X2**(-1)*DPQ*(-2.*V1-6.*V1**2)
     1 +CF**(-1)*X2**(-1)*LDQ*(-2.*V1-6.*V1**2-4.*V1**3)
     1 +CF**(-1)*DPQ*(2.*V1)
     1 +CF**(-1)*LDQ*(2.*V1-V1*W+2.*V1**2+V1**2*W)+0.
C
      TEMP = 0.D0
      DO 10 II=1,4
      TEMP = TEMP + Q(II)**2
10    CONTINUE
      FBD12 = ALFAS*ALFPI*TEMP * V * GG1 * GG2 *
     1   (BD5+BD6+BD7+BD8+BD9+BD10+BD11)
c
c     adjust to ms-bar gluon spin conventions
      LSQ=LSQ+1.
c
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBK12(V,W)
      implicit real*8(a-h,o-z)
 	include "vari.f"
       include "facto.f"
 	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
c
c     adjust to ms-bar gluon spin conventions
      LSQ=LSQ+1.
c
       BK5=
     1 +CF*NC**(-2)*LV*(-8.+8.*V1-12.*V1*W+4.*V1*W**2-4.*V1*X1**(-1)-2.
     1 *V1**2+4.*V1**2*W-2.*V1**2*W**2-8.*V2**(-1)*X1**(-1)+8.*W-2.*W**
     1 2+4.*X1**(-1))
     1 +CF*NC**(-2)*LV*X2**(-1)*(8.-8.*V2**(-1))
     1 +CF*NC**(-2)*LV*DPQ*(4.-4.*V1+8.*V1*W-4.*V1*W**2+2.*V1**2-4.*V1*
     1 *2*W+2.*V1**2*W**2-4.*W+2.*W**2)
      BK5 = BK5
     1 +CF*NC**(-1)*LV*(-24.-2.*V**(-1)+V**(-1)*W+4.*V**(-1)*W**(-1)-2.
     1 *V1-6.*V1*W-16.*V1*W**2+12.*V1*W**3+4.*V1*W**(-1)+V1*X1**(-2)-V1
     1 *X1**(-1)+4.*V1**2-4.*V1**2*W+4.*V1**2*W**2-4.*V1**2*W**3-4.*V1*
     1 *2*W**(-1)+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.*V1**(-1)*W**3+W+20.
     1 *W**2-12.*W**3-4.*W**(-1)-2.*X1**(-1))
      BK5 = BK5
     1 +CF*NC**(-1)*LV*X2**(-2)*(-4.*V1**2)
     1 +CF*NC**(-1)*LV*X2**(-2)*DPQ*(4.*V1**2)
     1 +CF*NC**(-1)*LV*X2**(-1)*(16.+12.*V1+8.*V1**2)
     1 +CF*NC**(-1)*LV*X2**(-1)*DPQ*(-4.*V1-4.*V1**2)
     1 +CF*NC**(-1)*LV*FGQ*(2.+3.*V1*W-8.*V1*W**2+6.*V1*W**3+V1*X1**(-2
     1 )-V1*X1**(-1)-V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3+4.*V1**(-1)*W-
     1 4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-6.*W+10.*W**2-6.*W**3-2.*X1**(
     1 -1))
      BK5 = BK5
     1 +CF*NC**(-1)*LV*DPQ*(4.-2.*V**(-1)*W**(-1)+4.*V1-2.*V1*W+8.*V1*W
     1 **2-6.*V1*W**3-2.*V1*W**(-1)-2.*V1**2+2.*V1**2*W-2.*V1**2*W**2+2
     1 .*V1**2*W**3+2.*V1**2*W**(-1)-4.*V1**(-1)*W+4.*V1**(-1)*W**2-2.*
     1 V1**(-1)*W**3+4.*W-10.*W**2+6.*W**3+2.*W**(-1))
C
       BK6=
     1 +CF*NC**(-1)*LX1*(4.-2.*V1-4.*V1*W+16.*V1*W**2-12.*V1*W**3+2.*V1
     1 **2*W-4.*V1**2*W**2+4.*V1**2*W**3-8.*V1**(-1)*W+8.*V1**(-1)*W**2
     1 -4.*V1**(-1)*W**3+10.*W-20.*W**2+12.*W**3)
C
       BK7=
     1 +CF*NC**(-2)*LX2*DPQ*(8.-8.*V1+16.*V1*W-8.*V1*W**2+4.*V1**2-8.*V
     1 1**2*W+4.*V1**2*W**2-8.*W+4.*W**2)
     1 +CF*NC**(-1)*LX2*(-8.*V1)
     1 +CF*NC**(-1)*LX2*X2**(-2)*(-8.*V1**2)
     1 +CF*NC**(-1)*LX2*X2**(-2)*DPQ*(8.*V1**2)
     1 +CF*NC**(-1)*LX2*X2**(-1)*(8.*V1+8.*V1**2)
      BK7 = BK7
     1 +CF*NC**(-1)*LX2*X2**(-1)*DPQ*(-8.*V1-8.*V1**2)
     1 +CF*NC**(-1)*LX2*DPQ*(8.-4.*V**(-1)*W**(-1)+8.*V1-4.*V1*W+16.*V1
     1 *W**2-12.*V1*W**3-4.*V1*W**(-1)-4.*V1**2+4.*V1**2*W-4.*V1**2*W**
     1 2+4.*V1**2*W**3+4.*V1**2*W**(-1)-8.*V1**(-1)*W+8.*V1**(-1)*W**2-
     1 4.*V1**(-1)*W**3+8.*W-20.*W**2+12.*W**3+4.*W**(-1))
C
       BK8=
     1 +CF*NC**(-2)*LV1*(-4.+2.*V**(-1)+4.*V1-8.*V1*W+4.*V1*W**2+2.*V1*
     1 X1**(-1)-2.*V1**2+4.*V1**2*W-2.*V1**2*W**2+4.*V2**(-1)*X1**(-1)+
     1 2.*W-2.*W**2-2.*X1**(-1))
     1 +CF*NC**(-2)*LV1*X2**(-1)*(-4.*V**(-1)+4.*V2**(-1))
      BK8 = BK8
     1 +CF*NC**(-1)*LV1*(4.*V1+6.*V1*W-16.*V1*W**2+12.*V1*W**3-2.*V1**2
     1 *W+4.*V1**2*W**2-4.*V1**2*W**3+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.
     1 *V1**(-1)*W**3-12.*W+20.*W**2-12.*W**3)
     1 +CF*NC**(-1)*LV1*X2**(-1)*(-8.*V1)
     1 +CF*NC**(-1)*LV1*FGQ*(-2.-3.*V1*W+8.*V1*W**2-6.*V1*W**3-V1*X1**(
     1 -2)+V1*X1**(-1)+V1**2*W-2.*V1**2*W**2+2.*V1**2*W**3-4.*V1**(-1)*
     1 W+4.*V1**(-1)*W**2-2.*V1**(-1)*W**3+6.*W-10.*W**2+6.*W**3+2.*X1*
     1 *(-1))
C
       BK9=
     1 +CF*NC**(-2)*LW*(-4.-2.*V**(-1)+4.*V1-8.*V1*W+4.*V1*W**2-2.*V1*X
     1 1**(-1)-2.*V1**2+4.*V1**2*W-2.*V1**2*W**2-4.*V2**(-1)*X1**(-1)+6
     1 .*W-2.*W**2+2.*X1**(-1))
     1 +CF*NC**(-2)*LW*X2**(-1)*(4.*V**(-1)-4.*V2**(-1))
     1 +CF*NC**(-1)*LW*(-8.+4.*V**(-1)*W**(-1)-4.*V1-2.*V1*W+4.*V1*W**(
     1 -1)+4.*V1**2-2.*V1**2*W-4.*V1**2*W**(-1)+4.*W-4.*W**(-1))
      BK9 = BK9
     1 +CF*NC**(-1)*LW*X2**(-1)*(8.*V1)
     1 +CF*NC**(-1)*LW*FGQ*(-2.+2.*V**(-1)-V**(-1)*W-2.*V**(-1)*W**(-1)
     1 +2.*V1-V1*W-2.*V1*W**(-1)-2.*V1**2+V1**2*W+2.*V1**2*W**(-1)+W+2.
     1 *W**(-1))
C
       BK10=
     1 +CF*NC**(-2)*LW1*(-4.+2.*V**(-1)+4.*V1-4.*V1*W-2.*V1*X1**(-1)-4.
     1 *V2**(-1)*X1**(-1)+2.*W+2.*X1**(-1))
     1 +CF*NC**(-2)*LW1*X2**(-1)*(8.-4.*V**(-1)-4.*V2**(-1))
     1 +CF*NC**(-2)*LW1*DPQ*(4.-4.*V1+8.*V1*W-4.*V1*W**2+2.*V1**2-4.*V1
     1 **2*W+2.*V1**2*W**2-4.*W+2.*W**2)
      BK10 = BK10
     1 +CF*NC**(-1)*LW1*(-20.-2.*V**(-1)+V**(-1)*W+4.*V**(-1)*W**(-1)-4
     1 .*V1*W-16.*V1*W**2+12.*V1*W**3+4.*V1*W**(-1)+V1*X1**(-2)-V1*X1**
     1 (-1)+4.*V1**2-4.*V1**2*W+4.*V1**2*W**2-4.*V1**2*W**3-4.*V1**2*W*
     1 *(-1)+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.*V1**(-1)*W**3-W+20.*W**2
     1 -12.*W**3-4.*W**(-1)-2.*X1**(-1))
     1 +CF*NC**(-1)*LW1*X2**(-2)*(-4.*V1**2)
     1 +CF*NC**(-1)*LW1*X2**(-2)*DPQ*(4.*V1**2)
      BK10 = BK10
     1 +CF*NC**(-1)*LW1*X2**(-1)*(16.+4.*V1+8.*V1**2)
     1 +CF*NC**(-1)*LW1*X2**(-1)*DPQ*(-4.*V1-4.*V1**2)
     1 +CF*NC**(-1)*LW1*FGQ*(4.-2.*V**(-1)+V**(-1)*W+2.*V**(-1)*W**(-1)
     1 -2.*V1+4.*V1*W-8.*V1*W**2+6.*V1*W**3+2.*V1*W**(-1)+V1*X1**(-2)-V
     1 1*X1**(-1)+2.*V1**2-2.*V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3-2.*V1
     1 **2*W**(-1)+4.*V1**(-1)*W-4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-7.*W
     1 +10.*W**2-6.*W**3-2.*W**(-1)-2.*X1**(-1))
      BK10 = BK10
     1 +CF*NC**(-1)*LW1*DPQ*(4.-2.*V**(-1)*W**(-1)+4.*V1-2.*V1*W+8.*V1*
     1 W**2-6.*V1*W**3-2.*V1*W**(-1)-2.*V1**2+2.*V1**2*W-2.*V1**2*W**2+
     1 2.*V1**2*W**3+2.*V1**2*W**(-1)-4.*V1**(-1)*W+4.*V1**(-1)*W**2-2.
     1 *V1**(-1)*W**3+4.*W-10.*W**2+6.*W**3+2.*W**(-1))
C
       BK11=
     1 +CF*NC**(-2)*(-4.*V1*W+4.*V1*W**2-2.*V1**2+4.*V1**2*W-2.*V1**2*W
     1 **2-2.*W**2)
     1 +CF*NC**(-2)*LDQ*(-4.+4.*V1-8.*V1*W+4.*V1*W**2-2.*V1**2+4.*V1**2
     1 *W-2.*V1**2*W**2+4.*W-2.*W**2)
     1 +CF*NC**(-2)*DPQ*(-4.+4.*V1-4.*V1*W+4.*W)
     1 +CF*NC**(-1)*(-4.+3.*V**(-1)-2.*V**(-1)*W+6.*V1+4.*V1*W+4.*V1*W*
     1 *2-4.*V1*W**(-1)-2.*V1*X1**(-2)+5.*V1*X1**(-1)-2.*V1**2*W-4.*V1*
     1 *(-1)*W+4.*V1**(-1)*W**2+7.*W-8.*W**2+3.*X1**(-1))
      BK11 = BK11
     1 +CF*NC**(-1)*X2**(-2)*(16.*V1**2)
     1 +CF*NC**(-1)*X2**(-2)*LDQ*(-4.*V1**2)
     1 +CF*NC**(-1)*X2**(-2)*DPQ*(-4.*V1**2)
     1 +CF*NC**(-1)*X2**(-1)*(-16.*V1-8.*V1**2)
     1 +CF*NC**(-1)*X2**(-1)*LDQ*(4.*V1+4.*V1**2)
     1 +CF*NC**(-1)*X2**(-1)*DPQ*(4.*V1+4.*V1**2)
      BK11 = BK11
     1 +CF*NC**(-1)*LSQ*(4.-2.*V**(-1)+V**(-1)*W+2.*V**(-1)*W**(-1)-2.*
     1 V1+4.*V1*W-8.*V1*W**2+6.*V1*W**3+2.*V1*W**(-1)+V1*X1**(-2)-V1*X1
     1 **(-1)+2.*V1**2-2.*V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3-2.*V1**2*
     1 W**(-1)+4.*V1**(-1)*W-4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-7.*W+10.
     1 *W**2-6.*W**3-2.*W**(-1)-2.*X1**(-1))
      BK11 = BK11
     1 +CF*NC**(-1)*LDQ*(-4.+2.*V**(-1)*W**(-1)-4.*V1+2.*V1*W-8.*V1*W**
     1 2+6.*V1*W**3+2.*V1*W**(-1)+2.*V1**2-2.*V1**2*W+2.*V1**2*W**2-2.*
     1 V1**2*W**3-2.*V1**2*W**(-1)+4.*V1**(-1)*W-4.*V1**(-1)*W**2+2.*V1
     1 **(-1)*W**3-4.*W+10.*W**2-6.*W**3-2.*W**(-1))
      BK11 = BK11
     1 +CF*NC**(-1)*FGQ*(16.-8.*V**(-1)+7./2.*V**(-1)*W+3.*V**(-1)*W**(
     1 -1)-8.*V1+15.*V1*W-22.*V1*W**2+9.*V1*W**3+3.*V1*W**(-1)+7./2.*V1
     1 *X1**(-2)-7./2.*V1*X1**(-1)+8.*V1**2-7.*V1**2*W+8.*V1**2*W**2-3.
     1 *V1**2*W**3-3.*V1**2*W**(-1)+6.*V1**(-1)*W-6.*V1**(-1)*W**2+3.*V
     1 1**(-1)*W**3-35./2.*W+20.*W**2-9.*W**3-3.*W**(-1)-8.*X1**(-1))
     1 +CF*NC**(-1)*DPQ*(-4.-4.*V1-4.*V1*W**2+4.*V1*W**(-1)+4.*V1**(-1)
     1 *W-4.*V1**(-1)*W**2-4.*W+8.*W**2)+0.
C
      TEMP = 0.D0
      DO 10 II=1,8
      TEMP = TEMP + Q(II)**2 * QQ1(II) * QQ2(II)
10    CONTINUE
      FBK12 = ALFAS*ALFPI*TEMP * V *
     1    (BK5+BK6+BK7+BK8+BK9+BK10+BK11)
c
c     adjust to ms-bar gluon spin conventions
      LSQ=LSQ-1.
c
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBJ12(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
 	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
c
c     adjust to ms-bar gluon spin conventions
      LSQ=LSQ+1.
c
       BJ5=
     1 +CF*NC**(-2)*LV*(-4.-14.*V1*W+12.*V1*W**2-2.*V1**2+2.*V1**2*W-6.
     1 *V1**2*W**2+12.*W-6.*W**2)
     1 +CF*NC**(-2)*LV*X2**(-2)*(12.*V1**2)
     1 +CF*NC**(-2)*LV*X2**(-2)*DPQ*(-12.*V1**2)
     1 +CF*NC**(-2)*LV*X2**(-1)*(-4.*V1-4.*V1**2+4.*V1**3)
     1 +CF*NC**(-2)*LV*X2**(-1)*DPQ*(12.*V1+12.*V1**2)
     1 +CF*NC**(-2)*LV*DPQ*(-4.-8.*V1-2.*V1*W+4.*V1*W**2-2.*V1**2-2.*V1
     1 **2*W-2.*V1**2*W**2+4.*W-2.*W**2)
      BJ5 = BJ5
     1 +CF*NC**(-1)*LV*(24.-2.*V**(-1)+V**(-1)*W+4.*V**(-1)*W**(-1)-14.
     1 *V1+20.*V1*W-16.*V1*W**2+12.*V1*W**3+4.*V1*W**(-1)+V1*X1**(-2)-V
     1 1*X1**(-1)-6.*V1**2*W+4.*V1**2*W**2-4.*V1**2*W**3-4.*V1**2*W**(-
     1 1)+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.*V1**(-1)*W**3-23.*W+20.*W**
     1 2-12.*W**3-4.*W**(-1)-2.*X1**(-1))
      BJ5 = BJ5
     1 +CF*NC**(-1)*LV*X2**(-4)*(-8.*V1**4)
     1 +CF*NC**(-1)*LV*X2**(-4)*DPQ*(8.*V1**4)
     1 +CF*NC**(-1)*LV*X2**(-3)*(16.*V1**3+8.*V1**4)
     1 +CF*NC**(-1)*LV*X2**(-3)*DPQ*(-16.*V1**3-8.*V1**4)
      BJ5 = BJ5
     1 +CF*NC**(-1)*LV*X2**(-2)*(-16.*V1**2-16.*V1**3-4.*V1**4)
     1 +CF*NC**(-1)*LV*X2**(-2)*DPQ*(16.*V1**2+16.*V1**3+4.*V1**4)
     1 +CF*NC**(-1)*LV*X2**(-1)*(-16.+12.*V1**2+8.*V1**3)
     1 +CF*NC**(-1)*LV*X2**(-1)*DPQ*(-8.*V1-16.*V1**2-8.*V1**3)
     1 +CF*NC**(-1)*LV*FGQ*(2.+3.*V1*W-8.*V1*W**2+6.*V1*W**3+V1*X1**(-2
     1 )-V1*X1**(-1)-V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3+4.*V1**(-1)*W-
     1 4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-6.*W+10.*W**2-6.*W**3-2.*X1**(
     1 -1))
      BJ5 = BJ5
     1 +CF*NC**(-1)*LV*DPQ*(4.-2.*V**(-1)*W**(-1)+8.*V1-4.*V1*W+8.*V1*W
     1 **2-6.*V1*W**3-2.*V1*W**(-1)+2.*V1**2+4.*V1**2*W-2.*V1**2*W**2+2
     1 .*V1**2*W**3+2.*V1**2*W**(-1)-4.*V1**(-1)*W+4.*V1**(-1)*W**2-2.*
     1 V1**(-1)*W**3+4.*W-10.*W**2+6.*W**3+2.*W**(-1))
C
       BJ6=
     1 +CF*NC**(-2)*LX1*(2.+2.*V1+8.*V1*W-4.*V1*W**2-2.*V1**2*W+2.*V1**
     1 2*W**2-6.*W+2.*W**2)
     1 +CF*NC**(-1)*LX1*(-4.+2.*V1-8.*V1*W+16.*V1*W**2-12.*V1*W**3+2.*V
     1 1**2*W-4.*V1**2*W**2+4.*V1**2*W**3-8.*V1**(-1)*W+8.*V1**(-1)*W**
     1 2-4.*V1**(-1)*W**3+14.*W-20.*W**2+12.*W**3)
C
       BJ7=
     1 +CF*NC**(-2)*LX2*(10.+6.*V**(-1)*W1**(-1)+14.*V1+14.*V1*W-12.*V1
     1 *W**2-4.*V1*W1**(-1)+6.*V1**2+6.*V1**2*W**2-14.*W+6.*W**2)
     1 +CF*NC**(-2)*LX2*X2**(-2)*(24.*V1**2)
     1 +CF*NC**(-2)*LX2*X2**(-2)*DPQ*(-24.*V1**2)
     1 +CF*NC**(-2)*LX2*X2**(-1)*(-24.*V1-24.*V1**2)
     1 +CF*NC**(-2)*LX2*X2**(-1)*DPQ*(24.*V1+24.*V1**2)
      BJ7 = BJ7
     1 +CF*NC**(-2)*LX2*DPQ*(-8.-16.*V1-4.*V1*W+8.*V1*W**2-4.*V1**2-4.*
     1 V1**2*W-4.*V1**2*W**2+8.*W-4.*W**2)
     1 +CF*NC**(-1)*LX2*(-16.-8.*V1-4.*V1*W-8.*V1**2-4.*V1**2*W+8.*W)
     1 +CF*NC**(-1)*LX2*X2**(-4)*(-16.*V1**4)
     1 +CF*NC**(-1)*LX2*X2**(-4)*DPQ*(16.*V1**4)
     1 +CF*NC**(-1)*LX2*X2**(-3)*(32.*V1**3+16.*V1**4)
     1 +CF*NC**(-1)*LX2*X2**(-3)*DPQ*(-32.*V1**3-16.*V1**4)
     1 +CF*NC**(-1)*LX2*X2**(-2)*(-32.*V1**2-32.*V1**3-8.*V1**4)
      BJ7 = BJ7
     1 +CF*NC**(-1)*LX2*X2**(-2)*DPQ*(32.*V1**2+32.*V1**3+8.*V1**4)
     1 +CF*NC**(-1)*LX2*X2**(-1)*(16.*V1+32.*V1**2+16.*V1**3)
     1 +CF*NC**(-1)*LX2*X2**(-1)*DPQ*(-16.*V1-32.*V1**2-16.*V1**3)
     1 +CF*NC**(-1)*LX2*DPQ*(8.-4.*V**(-1)*W**(-1)+16.*V1-8.*V1*W+16.*V
     1 1*W**2-12.*V1*W**3-4.*V1*W**(-1)+4.*V1**2+8.*V1**2*W-4.*V1**2*W*
     1 *2+4.*V1**2*W**3+4.*V1**2*W**(-1)-8.*V1**(-1)*W+8.*V1**(-1)*W**2
     1 -4.*V1**(-1)*W**3+8.*W-20.*W**2+12.*W**3+4.*W**(-1))
C
       BJ8=
     1 +CF*NC**(-2)*LV1*(2.+6.*V1-2.*V1*W-4.*V1*W**2+4.*V1**2*W+2.*V1**
     1 2*W**2-2.*W+2.*W**2)
     1 +CF*NC**(-2)*LV1*X2**(-1)*(-8.*V1-4.*V1**3)
     1 +CF*NC**(-1)*LV1*(-4.*V1+6.*V1*W-16.*V1*W**2+12.*V1*W**3-2.*V1**
     1 2*W+4.*V1**2*W**2-4.*V1**2*W**3+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4
     1 .*V1**(-1)*W**3-12.*W+20.*W**2-12.*W**3)
      BJ8 = BJ8
     1 +CF*NC**(-1)*LV1*X2**(-1)*(8.*V1)
     1 +CF*NC**(-1)*LV1*FGQ*(-2.-3.*V1*W+8.*V1*W**2-6.*V1*W**3-V1*X1**(
     1 -2)+V1*X1**(-1)+V1**2*W-2.*V1**2*W**2+2.*V1**2*W**3-4.*V1**(-1)*
     1 W+4.*V1**(-1)*W**2-2.*V1**(-1)*W**3+6.*W-10.*W**2+6.*W**3+2.*X1*
     1 *(-1))
C
       BJ9=
     1 +CF*NC**(-2)*LW*(-4.-2.*V**(-1)*W1**(-1)-4.*V1-8.*V1*W+8.*V1*W**
     1 2+2.*V1*W1**(-1)-2.*V1**2-4.*V1**2*W**2+8.*W-4.*W**2-2.*W1**(-1)
     1 )
     1 +CF*NC**(-2)*LW*X2**(-1)*(8.*V1+4.*V1**3)
     1 +CF*NC**(-1)*LW*(8.+4.*V**(-1)*W**(-1)-4.*V1+6.*V1*W+4.*V1*W**(-
     1 1)+4.*V1**2-2.*V1**2*W-4.*V1**2*W**(-1)-4.*W-4.*W**(-1))
      BJ9 = BJ9
     1 +CF*NC**(-1)*LW*X2**(-1)*(-8.*V1)
     1 +CF*NC**(-1)*LW*FGQ*(-2.+2.*V**(-1)-V**(-1)*W-2.*V**(-1)*W**(-1)
     1 +2.*V1-V1*W-2.*V1*W**(-1)-2.*V1**2+V1**2*W+2.*V1**2*W**(-1)+W+2.
     1 *W**(-1))
C
       BJ10=
     1 +CF*NC**(-2)*LW1*(8.*V1-8.*V1*W+4.*V1*W**2-2.*V1**2+4.*V1**2*W-2
     1 .*V1**2*W**2+4.*W-2.*W**2)
     1 +CF*NC**(-2)*LW1*X2**(-2)*(12.*V1**2)
     1 +CF*NC**(-2)*LW1*X2**(-2)*DPQ*(-12.*V1**2)
     1 +CF*NC**(-2)*LW1*X2**(-1)*(-12.*V1-4.*V1**2)
     1 +CF*NC**(-2)*LW1*X2**(-1)*DPQ*(12.*V1+12.*V1**2)
      BJ10 = BJ10
     1 +CF*NC**(-2)*LW1*DPQ*(-4.-8.*V1-2.*V1*W+4.*V1*W**2-2.*V1**2-2.*V
     1 1**2*W-2.*V1**2*W**2+4.*W-2.*W**2)
     1 +CF*NC**(-1)*LW1*(20.-2.*V**(-1)+V**(-1)*W+4.*V**(-1)*W**(-1)-16
     1 .*V1+18.*V1*W-16.*V1*W**2+12.*V1*W**3+4.*V1*W**(-1)+V1*X1**(-2)-
     1 V1*X1**(-1)-6.*V1**2*W+4.*V1**2*W**2-4.*V1**2*W**3-4.*V1**2*W**(
     1 -1)+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.*V1**(-1)*W**3-21.*W+20.*W*
     1 *2-12.*W**3-4.*W**(-1)-2.*X1**(-1))
      BJ10 = BJ10
     1 +CF*NC**(-1)*LW1*X2**(-4)*(-8.*V1**4)
     1 +CF*NC**(-1)*LW1*X2**(-4)*DPQ*(8.*V1**4)
     1 +CF*NC**(-1)*LW1*X2**(-3)*(16.*V1**3+8.*V1**4)
     1 +CF*NC**(-1)*LW1*X2**(-3)*DPQ*(-16.*V1**3-8.*V1**4)
     1 +CF*NC**(-1)*LW1*X2**(-2)*(-16.*V1**2-16.*V1**3-4.*V1**4)
     1 +CF*NC**(-1)*LW1*X2**(-2)*DPQ*(16.*V1**2+16.*V1**3+4.*V1**4)
     1 +CF*NC**(-1)*LW1*X2**(-1)*(-16.+8.*V1+12.*V1**2+8.*V1**3)
      BJ10 = BJ10
     1 +CF*NC**(-1)*LW1*X2**(-1)*DPQ*(-8.*V1-16.*V1**2-8.*V1**3)
     1 +CF*NC**(-1)*LW1*FGQ*(4.-2.*V**(-1)+V**(-1)*W+2.*V**(-1)*W**(-1)
     1 -2.*V1+4.*V1*W-8.*V1*W**2+6.*V1*W**3+2.*V1*W**(-1)+V1*X1**(-2)-V
     1 1*X1**(-1)+2.*V1**2-2.*V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3-2.*V1
     1 **2*W**(-1)+4.*V1**(-1)*W-4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-7.*W
     1 +10.*W**2-6.*W**3-2.*W**(-1)-2.*X1**(-1))
      BJ10 = BJ10
     1 +CF*NC**(-1)*LW1*DPQ*(4.-2.*V**(-1)*W**(-1)+8.*V1-4.*V1*W+8.*V1*
     1 W**2-6.*V1*W**3-2.*V1*W**(-1)+2.*V1**2+4.*V1**2*W-2.*V1**2*W**2+
     1 2.*V1**2*W**3+2.*V1**2*W**(-1)-4.*V1**(-1)*W+4.*V1**(-1)*W**2-2.
     1 *V1**(-1)*W**3+4.*W-10.*W**2+6.*W**3+2.*W**(-1))
C
       BJ11=
     1 +CF*NC**(-2)*(-3.*V**(-1)+V**(-1)*W-6.*V1*W-4.*V1*W**2+V1*X1**(-
     1 2)-2.*V1*X1**(-1)+2.*V1**2+2.*V1**2*W+2.*V1**2*W**2+2.*W+2.*W**2
     1 -3.*X1**(-1))
     1 +CF*NC**(-2)*X2**(-2)*(-8.*V1**2)
     1 +CF*NC**(-2)*X2**(-2)*LDQ*(12.*V1**2)
     1 +CF*NC**(-2)*X2**(-2)*DPQ*(12.*V1**2)
     1 +CF*NC**(-2)*X2**(-1)*(8.*V1+4.*V1**2)
      BJ11 = BJ11
     1 +CF*NC**(-2)*X2**(-1)*LDQ*(-12.*V1-12.*V1**2)
     1 +CF*NC**(-2)*X2**(-1)*DPQ*(-12.*V1-12.*V1**2)
     1 +CF*NC**(-2)*LDQ*(4.+8.*V1+2.*V1*W-4.*V1*W**2+2.*V1**2+2.*V1**2*
     1 W+2.*V1**2*W**2-4.*W+2.*W**2)
     1 +CF*NC**(-2)*LR*(4.*V**(-1)*W1**(-1)-2.*V1*W1**(-1)-2.*W1**(-1))
     1 +CF*NC**(-2)*DPQ*(4.+8.*V1+4.*V1*W-4.*W)
      BJ11 = BJ11
     1 +CF*NC**(-1)*(-10./3.+3.*V**(-1)-2.*V**(-1)*W+20./3.*V1+2./3.*V1
     1 *W+4.*V1*W**2-4.*V1*W**(-1)-2.*V1*X1**(-2)+V1*X1**(-1)-2.*V1**2*
     1 W-4.*V1**(-1)*W+4.*V1**(-1)*W**2+19./3.*W-8.*W**2+3.*X1**(-1))
     1 +CF*NC**(-1)*X2**(-4)*(24.*V1**4)
     1 +CF*NC**(-1)*X2**(-4)*LDQ*(-8.*V1**4)
      BJ11 = BJ11
     1 +CF*NC**(-1)*X2**(-4)*DPQ*(-8.*V1**4)
     1 +CF*NC**(-1)*X2**(-3)*(-48.*V1**3-24.*V1**4)
     1 +CF*NC**(-1)*X2**(-3)*LDQ*(16.*V1**3+8.*V1**4)
     1 +CF*NC**(-1)*X2**(-3)*DPQ*(16.*V1**3+8.*V1**4)
      BJ11 = BJ11
     1 +CF*NC**(-1)*X2**(-2)*(28.*V1**2+48.*V1**3)
     1 +CF*NC**(-1)*X2**(-2)*LDQ*(-16.*V1**2-16.*V1**3-4.*V1**4)
     1 +CF*NC**(-1)*X2**(-2)*DPQ*(-16.*V1**2-16.*V1**3)
     1 +CF*NC**(-1)*X2**(-1)*(-4.*V1-28.*V1**2)
     1 +CF*NC**(-1)*X2**(-1)*LDQ*(8.*V1+16.*V1**2+8.*V1**3)
     1 +CF*NC**(-1)*X2**(-1)*DPQ*(8.*V1+16.*V1**2)
      BJ11 = BJ11
     1 +CF*NC**(-1)*LSQ*(4.-2.*V**(-1)+V**(-1)*W+2.*V**(-1)*W**(-1)-2.*
     1 V1+4.*V1*W-8.*V1*W**2+6.*V1*W**3+2.*V1*W**(-1)+V1*X1**(-2)-V1*X1
     1 **(-1)+2.*V1**2-2.*V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3-2.*V1**2*
     1 W**(-1)+4.*V1**(-1)*W-4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-7.*W+10.
     1 *W**2-6.*W**3-2.*W**(-1)-2.*X1**(-1))
      BJ11 = BJ11
     1 +CF*NC**(-1)*LDQ*(-4.+2.*V**(-1)*W**(-1)-8.*V1+4.*V1*W-8.*V1*W**
     1 2+6.*V1*W**3+2.*V1*W**(-1)-2.*V1**2-4.*V1**2*W+2.*V1**2*W**2-2.*
     1 V1**2*W**3-2.*V1**2*W**(-1)+4.*V1**(-1)*W-4.*V1**(-1)*W**2+2.*V1
     1 **(-1)*W**3-4.*W+10.*W**2-6.*W**3-2.*W**(-1))
      BJ11 = BJ11
     1 +CF*NC**(-1)*FGQ*(16.-8.*V**(-1)+7./2.*V**(-1)*W+3.*V**(-1)*W**(
     1 -1)-8.*V1+15.*V1*W-22.*V1*W**2+9.*V1*W**3+3.*V1*W**(-1)+7./2.*V1
     1 *X1**(-2)-7./2.*V1*X1**(-1)+8.*V1**2-7.*V1**2*W+8.*V1**2*W**2-3.
     1 *V1**2*W**3-3.*V1**2*W**(-1)+6.*V1**(-1)*W-6.*V1**(-1)*W**2+3.*V
     1 1**(-1)*W**3-35./2.*W+20.*W**2-9.*W**3-3.*W**(-1)-8.*X1**(-1))
     1 +CF*NC**(-1)*DPQ*(-4.-8.*V1-4.*V1*W**2+4.*V1*W**(-1)+4.*V1**(-1)
     1 *W-4.*V1**(-1)*W**2-4.*W+8.*W**2)+0.
C
      TEMP = 0.
      DO 10 II=1,6
      IF (II.LE.3) IIA = II+3
      IF (II.GT.3) IIA = II-3
      TEMP = TEMP + Q(II)**2 * QQ2(II) * QQ1(IIA)
10    CONTINUE
      TEMP= TEMP + Q(7)**2 * (QQ1(7)*QQ2(8) + QQ1(8)*QQ2(7))
      FBJ12 = ALFAS*ALFPI*TEMP * V *
     1    (BJ5+BJ6+BJ7+BJ8+BJ9+BJ10+BJ11)
c
c     adjust to ms-bar gluon spin conventions
      LSQ=LSQ-1.
c
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBJ1(V)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BJ1=
     1 +CF*NC**(-1)  *  (2./9.*V**(-1)+8./9.*V1)
     1 +CF*NC**(-1)  *  LV*(2./3.*V**(-1)-4./3.*V1)
C
      TEMP = 0.D0
      DO 10 II=1,6
      IF (II.LE.3) IIA = II+3
      IF (II.GT.3) IIA = II-3
      TEMP = TEMP + Q(II)**2 * QQ2(II) * QQ1(IIA)
10    CONTINUE
      TEMP= TEMP + Q(7)**2 * (QQ1(7)*QQ2(8) + QQ1(8)*QQ2(7))
      FBJ1 = ALFAS*ALFPI*TEMP * V *
     1    BJ1
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBJ2(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BJ2=
     1 +CF*NC**(-1)*(2./3.*V**(-1)-4./3.*V1)
C
      TEMP = 0.D0
      DO 10 II=1,6
      IF (II.LE.3) IIA = II+3
      IF (II.GT.3) IIA = II-3
      TEMP = TEMP + Q(II)**2 * QQ2(II) * QQ1(IIA)
10    CONTINUE
      TEMP= TEMP + Q(7)**2 * (QQ1(7)*QQ2(8) + QQ1(8)*QQ2(7))
      FBJ2 = ALFAS*ALFPI*TEMP * V *
     1    BJ2
      RETURN
      END
      DOUBLE PRECISION FUNCTION BE12F(V,W,QI,QF)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
         include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BE5=
     1 +QF**2*CF*NC**(-1)*LV*(-4.*V1+2.*V1*W-4.*V1**2-2.*V1**2*W)
     1 +QF**2*CF*NC**(-1)*LV*X2**(-4)*(-8.*V1**4)
     1 +QF**2*CF*NC**(-1)*LV*X2**(-4)*DPQ*(8.*V1**4)
     1 +QF**2*CF*NC**(-1)*LV*X2**(-3)*(16.*V1**3+8.*V1**4)
     1 +QF**2*CF*NC**(-1)*LV*X2**(-3)*DPQ*(-16.*V1**3-8.*V1**4)
     1 +QF**2*CF*NC**(-1)*LV*X2**(-2)*(-12.*V1**2-16.*V1**3-4.*V1**4)
      BE5 = BE5
     1 +QF**2*CF*NC**(-1)*LV*X2**(-2)*DPQ*(12.*V1**2+16.*V1**3+4.*V1**4
     1 )
     1 +QF**2*CF*NC**(-1)*LV*X2**(-1)*(4.*V1+12.*V1**2+8.*V1**3)
     1 +QF**2*CF*NC**(-1)*LV*X2**(-1)*DPQ*(-4.*V1-12.*V1**2-8.*V1**3)
     1 +QF**2*CF*NC**(-1)*LV*DPQ*(4.*V1-2.*V1*W+4.*V1**2+2.*V1**2*W)
C
       BE7=
     1 +QF**2*CF*NC**(-1)*LX2*(-8.*V1+4.*V1*W-8.*V1**2-4.*V1**2*W)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-4)*(-16.*V1**4)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-4)*DPQ*(16.*V1**4)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-3)*(32.*V1**3+16.*V1**4)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-3)*DPQ*(-32.*V1**3-16.*V1**4)
      BE7 = BE7
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-2)*(-24.*V1**2-32.*V1**3-8.*V1**4)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-2)*DPQ*(24.*V1**2+32.*V1**3+8.*V1**
     1 4)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-1)*(8.*V1+24.*V1**2+16.*V1**3)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-1)*DPQ*(-8.*V1-24.*V1**2-16.*V1**3)
     1 +QF**2*CF*NC**(-1)*LX2*DPQ*(8.*V1-4.*V1*W+8.*V1**2+4.*V1**2*W)
C
       BE10=
     1 +QF**2*CF*NC**(-1)*LW1*(-4.*V1+2.*V1*W-4.*V1**2-2.*V1**2*W)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-4)*(-8.*V1**4)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-4)*DPQ*(8.*V1**4)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-3)*(16.*V1**3+8.*V1**4)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-3)*DPQ*(-16.*V1**3-8.*V1**4)
      BE10 = BE10
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-2)*(-12.*V1**2-16.*V1**3-4.*V1**4)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-2)*DPQ*(12.*V1**2+16.*V1**3+4.*V1**
     1 4)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-1)*(4.*V1+12.*V1**2+8.*V1**3)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-1)*DPQ*(-4.*V1-12.*V1**2-8.*V1**3)
     1 +QF**2*CF*NC**(-1)*LW1*DPQ*(4.*V1-2.*V1*W+4.*V1**2+2.*V1**2*W)
C
       BE11=
     1 +QI**2*CF*NC**(-1)*(2./3.+2./3.*V1+2./3.*V1*W-2./3.*W)
     1 +QF**2*CF*NC**(-1)*(4.*V1)
     1 +QF**2*CF*NC**(-1)*X2**(-4)*(24.*V1**4)
     1 +QF**2*CF*NC**(-1)*X2**(-4)*LDQ*(-8.*V1**4)
     1 +QF**2*CF*NC**(-1)*X2**(-4)*DPQ*(-8.*V1**4)
     1 +QF**2*CF*NC**(-1)*X2**(-3)*(-48.*V1**3-24.*V1**4)
      BE11 = BE11
     1 +QF**2*CF*NC**(-1)*X2**(-3)*LDQ*(16.*V1**3+8.*V1**4)
     1 +QF**2*CF*NC**(-1)*X2**(-3)*DPQ*(16.*V1**3+8.*V1**4)
     1 +QF**2*CF*NC**(-1)*X2**(-2)*(28.*V1**2+48.*V1**3)
     1 +QF**2*CF*NC**(-1)*X2**(-2)*LDQ*(-12.*V1**2-16.*V1**3-4.*V1**4)
     1 +QF**2*CF*NC**(-1)*X2**(-2)*DPQ*(-12.*V1**2-16.*V1**3)
     1 +QF**2*CF*NC**(-1)*X2**(-1)*(-4.*V1-28.*V1**2)
      BE11 = BE11
     1 +QF**2*CF*NC**(-1)*X2**(-1)*LDQ*(4.*V1+12.*V1**2+8.*V1**3)
     1 +QF**2*CF*NC**(-1)*X2**(-1)*DPQ*(4.*V1+12.*V1**2)
     1 +QF**2*CF*NC**(-1)*LDQ*(-4.*V1+2.*V1*W-4.*V1**2-2.*V1**2*W)
     1 +QF**2*CF*NC**(-1)*DPQ*(-4.*V1)
C
      BE12F = BE5+BE7+BE10+BE11
      RETURN
      END
      DOUBLE PRECISION FUNCTION BF12F(V,W,QI,QFF)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
C     CHANGE SIGN OF QF TO ACCOUNT FOR FACT THAT EXP. BELOW ARE FOR
C     QUARK-ANTIQUARK SCATTERING
      QF = -QFF
c
c     adjust to ms-bar gluon spin conventions
      LSQ=LSQ+1.
c
       BF5=
     1 +QI*QF*CF*NC**(-1)*LV*(24.-4.*V1+12.*V1*W-12.*W)
     1 +QI*QF*CF*NC**(-1)*LV*X2**(-1)*(-16.-8.*V1-4.*V1**2)
     1 +QI**2*CF*NC**(-1)*LV*(2.-2.*V**(-1)+V**(-1)*W+4.*V**(-1)*W**(-1
     1 )-4.*V1+2.*V1*W+4.*V1*W**(-1)+4.*V1**2-2.*V1**2*W-4.*V1**2*W**(-
     1 1)-W-4.*W**(-1))
      BF5 = BF5
     1 +QI**2*CF*NC**(-1)*LV*X2**(-2)*(-2.*V1**2)
     1 +QI**2*CF*NC**(-1)*LV*X2**(-2)*DPQ*(2.*V1**2)
     1 +QI**2*CF*NC**(-1)*LV*X2**(-1)*(-2.*V1+2.*V1**2)
     1 +QI**2*CF*NC**(-1)*LV*X2**(-1)*DPQ*(2.*V1-2.*V1**2)
     1 +QI**2*CF*NC**(-1)*LV*DPQ*(-2.*V**(-1)*W**(-1)+2.*V1-V1*W-2.*V1*
     1 W**(-1)-2.*V1**2+V1**2*W+2.*V1**2*W**(-1)+2.*W**(-1))
      BF5 = BF5
     1 +QF**2*CF*NC**(-1)*LV*(-2.-2.*V1+4.*V1*W-16.*V1*W**2+12.*V1*W**3
     1 +V1*X1**(-2)-V1*X1**(-1)-2.*V1**2*W+4.*V1**2*W**2-4.*V1**2*W**3+
     1 8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.*V1**(-1)*W**3-10.*W+20.*W**2-1
     1 2.*W**3-2.*X1**(-1))
     1 +QF**2*CF*NC**(-1)*LV*X2**(-2)*(-2.*V1**2)
      BF5 = BF5
     1 +QF**2*CF*NC**(-1)*LV*X2**(-2)*DPQ*(2.*V1**2)
     1 +QF**2*CF*NC**(-1)*LV*X2**(-1)*(6.*V1+2.*V1**2)
     1 +QF**2*CF*NC**(-1)*LV*X2**(-1)*DPQ*(-6.*V1-2.*V1**2)
      BF5 = BF5
     1 +QF**2*CF*NC**(-1)*LV*FGQ*(2.+3.*V1*W-8.*V1*W**2+6.*V1*W**3+V1*X
     1 1**(-2)-V1*X1**(-1)-V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3+4.*V1**(
     1 -1)*W-4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-6.*W+10.*W**2-6.*W**3-2.
     1 *X1**(-1))
     1 +QF**2*CF*NC**(-1)*LV*DPQ*(4.+2.*V1-V1*W+8.*V1*W**2-6.*V1*W**3+V
     1 1**2*W-2.*V1**2*W**2+2.*V1**2*W**3-4.*V1**(-1)*W+4.*V1**(-1)*W**
     1 2-2.*V1**(-1)*W**3+4.*W-10.*W**2+6.*W**3)
C
       BF6=
     1 +QI*QF*CF*NC**(-1)*LX1*(-4.+2.*V1-2.*V1*W+2.*W)
     1 +QF**2*CF*NC**(-1)*LX1*(-6.*V1*W+16.*V1*W**2-12.*V1*W**3+2.*V1**
     1 2*W-4.*V1**2*W**2+4.*V1**2*W**3-8.*V1**(-1)*W+8.*V1**(-1)*W**2-4
     1 .*V1**(-1)*W**3+12.*W-20.*W**2+12.*W**3)
C
       BF7=
     1 +QI*QF*CF*NC**(-1)*LX2*(-8.+4.*V1-4.*V1*W+4.*W)
     1 +QI**2*CF*NC**(-1)*LX2*X2**(-2)*(-4.*V1**2)
     1 +QI**2*CF*NC**(-1)*LX2*X2**(-2)*DPQ*(4.*V1**2)
     1 +QI**2*CF*NC**(-1)*LX2*X2**(-1)*(-4.*V1+4.*V1**2)
     1 +QI**2*CF*NC**(-1)*LX2*X2**(-1)*DPQ*(4.*V1-4.*V1**2)
     1 +QI**2*CF*NC**(-1)*LX2*DPQ*(-4.*V**(-1)*W**(-1)+4.*V1-2.*V1*W-4.
     1 *V1*W**(-1)-4.*V1**2+2.*V1**2*W+4.*V1**2*W**(-1)+4.*W**(-1))
      BF7 = BF7
     1 +QF**2*CF*NC**(-1)*LX2*(-8.-4.*V1-4.*V1*W+4.*W)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-2)*(-4.*V1**2)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-2)*DPQ*(4.*V1**2)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-1)*(12.*V1+4.*V1**2)
     1 +QF**2*CF*NC**(-1)*LX2*X2**(-1)*DPQ*(-12.*V1-4.*V1**2)
     1 +QF**2*CF*NC**(-1)*LX2*DPQ*(8.+4.*V1-2.*V1*W+16.*V1*W**2-12.*V1*
     1 W**3+2.*V1**2*W-4.*V1**2*W**2+4.*V1**2*W**3-8.*V1**(-1)*W+8.*V1*
     1 *(-1)*W**2-4.*V1**(-1)*W**3+8.*W-20.*W**2+12.*W**3)
C
       BF8=
     1 +QI*QF*CF*NC**(-1)*LV1*(-4.*V1)
     1 +QI*QF*CF*NC**(-1)*LV1*X2**(-1)*(8.*V1)
     1 +QF**2*CF*NC**(-1)*LV1*(6.*V1*W-16.*V1*W**2+12.*V1*W**3-2.*V1**2
     1 *W+4.*V1**2*W**2-4.*V1**2*W**3+8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.
     1 *V1**(-1)*W**3-12.*W+20.*W**2-12.*W**3)
      BF8 = BF8
     1 +QF**2*CF*NC**(-1)*LV1*FGQ*(-2.-3.*V1*W+8.*V1*W**2-6.*V1*W**3-V1
     1 *X1**(-2)+V1*X1**(-1)+V1**2*W-2.*V1**2*W**2+2.*V1**2*W**3-4.*V1*
     1 *(-1)*W+4.*V1**(-1)*W**2-2.*V1**(-1)*W**3+6.*W-10.*W**2+6.*W**3+
     1 2.*X1**(-1))
C
       BF9=
     1 +QI*QF*CF*NC**(-1)*LW*(8.+4.*V1*W-4.*W)
     1 +QI*QF*CF*NC**(-1)*LW*X2**(-1)*(-8.*V1)
     1 +QI**2*CF*NC**(-1)*LW*(4.*V**(-1)*W**(-1)-4.*V1+2.*V1*W+4.*V1*W*
     1 *(-1)+4.*V1**2-2.*V1**2*W-4.*V1**2*W**(-1)-4.*W**(-1))
     1 +QI**2*CF*NC**(-1)*LW*FGQ*(-2.+2.*V**(-1)-V**(-1)*W-2.*V**(-1)*W
     1 **(-1)+2.*V1-V1*W-2.*V1*W**(-1)-2.*V1**2+V1**2*W+2.*V1**2*W**(-1
     1 )+W+2.*W**(-1))
C
       BF10=
     1 +QI*QF*CF*NC**(-1)*LW1*(20.-6.*V1+10.*V1*W-10.*W)
     1 +QI*QF*CF*NC**(-1)*LW1*X2**(-1)*(-16.-4.*V1**2)
     1 +QI**2*CF*NC**(-1)*LW1*(2.-2.*V**(-1)+V**(-1)*W+4.*V**(-1)*W**(-
     1 1)-4.*V1+2.*V1*W+4.*V1*W**(-1)+4.*V1**2-2.*V1**2*W-4.*V1**2*W**(
     1 -1)-W-4.*W**(-1))
     1 +QI**2*CF*NC**(-1)*LW1*X2**(-2)*(-2.*V1**2)
      BF10 = BF10
     1 +QI**2*CF*NC**(-1)*LW1*X2**(-2)*DPQ*(2.*V1**2)
     1 +QI**2*CF*NC**(-1)*LW1*X2**(-1)*(-2.*V1+2.*V1**2)
     1 +QI**2*CF*NC**(-1)*LW1*X2**(-1)*DPQ*(2.*V1-2.*V1**2)
     1 +QI**2*CF*NC**(-1)*LW1*FGQ*(2.-2.*V**(-1)+V**(-1)*W+2.*V**(-1)*W
     1 **(-1)-2.*V1+V1*W+2.*V1*W**(-1)+2.*V1**2-V1**2*W-2.*V1**2*W**(-1
     1 )-W-2.*W**(-1))
      BF10 = BF10
     1 +QI**2*CF*NC**(-1)*LW1*DPQ*(-2.*V**(-1)*W**(-1)+2.*V1-V1*W-2.*V1
     1 *W**(-1)-2.*V1**2+V1**2*W+2.*V1**2*W**(-1)+2.*W**(-1))
     1 +QF**2*CF*NC**(-1)*LW1*(-2.-2.*V1+4.*V1*W-16.*V1*W**2+12.*V1*W**
     1 3+V1*X1**(-2)-V1*X1**(-1)-2.*V1**2*W+4.*V1**2*W**2-4.*V1**2*W**3
     1 +8.*V1**(-1)*W-8.*V1**(-1)*W**2+4.*V1**(-1)*W**3-10.*W+20.*W**2-
     1 12.*W**3-2.*X1**(-1))
      BF10 = BF10
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-2)*(-2.*V1**2)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-2)*DPQ*(2.*V1**2)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-1)*(6.*V1+2.*V1**2)
     1 +QF**2*CF*NC**(-1)*LW1*X2**(-1)*DPQ*(-6.*V1-2.*V1**2)
     1 +QF**2*CF*NC**(-1)*LW1*FGQ*(2.+3.*V1*W-8.*V1*W**2+6.*V1*W**3+V1*
     1 X1**(-2)-V1*X1**(-1)-V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3+4.*V1**
     1 (-1)*W-4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-6.*W+10.*W**2-6.*W**3-2
     1 .*X1**(-1))
      BF10 = BF10
     1 +QF**2*CF*NC**(-1)*LW1*DPQ*(4.+2.*V1-V1*W+8.*V1*W**2-6.*V1*W**3+
     1 V1**2*W-2.*V1**2*W**2+2.*V1**2*W**3-4.*V1**(-1)*W+4.*V1**(-1)*W*
     1 *2-2.*V1**(-1)*W**3+4.*W-10.*W**2+6.*W**3)
C
       BF11=
     1 +QI*QF*CF*NC**(-1)*(-2.*V1-2.*V1*W-2.*V1*X1**(-1))
     1 +QI*QF*CF*NC**(-1)*X2**(-2)*(-8.*V1**2)
     1 +QI*QF*CF*NC**(-1)*X2**(-1)*(8.*V1+4.*V1**2)
     1 +QI**2*CF*NC**(-1)*(-3.+3.*V**(-1)-2.*V**(-1)*W+3.*V1+2.*V1*W-4.
     1 *V1*W**(-1)-V1**2*W+2.*W)
     1 +QI**2*CF*NC**(-1)*X2**(-2)*(4.*V1**2)
      BF11 = BF11
     1 +QI**2*CF*NC**(-1)*X2**(-2)*LDQ*(-2.*V1**2)
     1 +QI**2*CF*NC**(-1)*X2**(-2)*DPQ*(-2.*V1**2)
     1 +QI**2*CF*NC**(-1)*X2**(-1)*(-2.*V1-2.*V1**2)
     1 +QI**2*CF*NC**(-1)*X2**(-1)*LDQ*(-2.*V1+2.*V1**2)
     1 +QI**2*CF*NC**(-1)*X2**(-1)*DPQ*(-2.*V1+2.*V1**2)
      BF11 = BF11
     1 +QI**2*CF*NC**(-1)*LSQ*(2.-2.*V**(-1)+V**(-1)*W+2.*V**(-1)*W**(-
     1 1)-2.*V1+V1*W+2.*V1*W**(-1)+2.*V1**2-V1**2*W-2.*V1**2*W**(-1)-W-
     1 2.*W**(-1))
     1 +QI**2*CF*NC**(-1)*LDQ*(2.*V**(-1)*W**(-1)-2.*V1+V1*W+2.*V1*W**(
     1 -1)+2.*V1**2-V1**2*W-2.*V1**2*W**(-1)-2.*W**(-1))
      BF11 = BF11
     1 +QI**2*CF*NC**(-1)*FGQ*(8.-8.*V**(-1)+7./2.*V**(-1)*W+3.*V**(-1)
     1 *W**(-1)-8.*V1+7./2.*V1*W+3.*V1*W**(-1)+8.*V1**2-7./2.*V1**2*W-3
     1 .*V1**2*W**(-1)-7./2.*W-3.*W**(-1))
     1 +QI**2*CF*NC**(-1)*DPQ*(-2.*V1+4.*V1*W**(-1))
     1 +QF**2*CF*NC**(-1)*(-1.+V1+4.*V1*W**2-2.*V1*X1**(-2)+3.*V1*X1**(
     1 -1)-V1**2*W-4.*V1**(-1)*W+4.*V1**(-1)*W**2+5.*W-8.*W**2+3.*X1**(
     1 -1))
      BF11 = BF11
     1 +QF**2*CF*NC**(-1)*X2**(-2)*(4.*V1**2)
     1 +QF**2*CF*NC**(-1)*X2**(-2)*LDQ*(-2.*V1**2)
     1 +QF**2*CF*NC**(-1)*X2**(-2)*DPQ*(-2.*V1**2)
     1 +QF**2*CF*NC**(-1)*X2**(-1)*(-6.*V1-2.*V1**2)
     1 +QF**2*CF*NC**(-1)*X2**(-1)*LDQ*(6.*V1+2.*V1**2)
     1 +QF**2*CF*NC**(-1)*X2**(-1)*DPQ*(6.*V1+2.*V1**2)
      BF11 = BF11
     1 +QF**2*CF*NC**(-1)*LSQ*(2.+3.*V1*W-8.*V1*W**2+6.*V1*W**3+V1*X1**
     1 (-2)-V1*X1**(-1)-V1**2*W+2.*V1**2*W**2-2.*V1**2*W**3+4.*V1**(-1)
     1 *W-4.*V1**(-1)*W**2+2.*V1**(-1)*W**3-6.*W+10.*W**2-6.*W**3-2.*X1
     1 **(-1))
     1 +QF**2*CF*NC**(-1)*LDQ*(-4.-2.*V1+V1*W-8.*V1*W**2+6.*V1*W**3-V1*
     1 *2*W+2.*V1**2*W**2-2.*V1**2*W**3+4.*V1**(-1)*W-4.*V1**(-1)*W**2+
     1 2.*V1**(-1)*W**3-4.*W+10.*W**2-6.*W**3)
      BF11 = BF11
     1 +QF**2*CF*NC**(-1)*FGQ*(8.+23./2.*V1*W-22.*V1*W**2+9.*V1*W**3+7.
     1 /2.*V1*X1**(-2)-7./2.*V1*X1**(-1)-7./2.*V1**2*W+8.*V1**2*W**2-3.
     1 *V1**2*W**3+6.*V1**(-1)*W-6.*V1**(-1)*W**2+3.*V1**(-1)*W**3-14.*
     1 W+20.*W**2-9.*W**3-8.*X1**(-1))
     1 +QF**2*CF*NC**(-1)*DPQ*(-4.-2.*V1-4.*V1*W**2+4.*V1**(-1)*W-4.*V1
     1 **(-1)*W**2-4.*W+8.*W**2)+0.
      BF12F = BF5+BF6+BF7+BF8+BF9+BF10+BF11
c
c     adjust to ms-bar gluon spin conventions
      LSQ=LSQ-1.
c
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBE12(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
      include "facto.f"
	include "qcd.f"
       include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
      TEMP = 0.D0
      DO 10 II=1,6
C
       IF (II.GT.3)      GO TO 100
C
      IIA = II+3
      IK  = II+1
      IF(IK.GT.3)  IK=IK-3
      IKA = IK+3
      IL  = II+2
      IF(IL.GT.3)  IL=IL-3
      ILA = IL+3
C
      GO TO 200
C
100    CONTINUE
      IIA = II-3
      IK  = II+1
      IF (IK.GT.6) IK=IK-3
      IKA = IK-3
      IL=II+2
      IF (IL.GT.6) IL=IL-3
      ILA = IL-3
C
200   CONTINUE
      TEMP = TEMP + QQ2(II) * QQ1(IIA) *
     1         (BE12F(V,W,Q(II),Q(IK)) + BE12F(V,W,Q(II),Q(IL))
     1                                 + BE12F(V,W,Q(II),Q(7)) )
     1       + QQ2(II) *
     1      (BF12F(V,W,Q(II),Q(IK))*QQ1(IK)+BF12F(V,W,Q(II),Q(IKA))
     1         *QQ1(IKA) + BF12F(V,W,Q(II),Q(IL))*QQ1(IL)
     1         +BF12F(V,W,Q(II),Q(ILA))*QQ1(ILA)
     1    +BF12F(V,W,Q(II),Q(7))*QQ1(7)+BF12F(V,W,Q(II),Q(8))*QQ1(8) )
     1    +QQ2(7)*BF12F(V,W,Q(7),Q(II))*QQ1(II)
     1    +QQ2(8)*BF12F(V,W,Q(8),Q(II))*QQ1(II)
10    CONTINUE
      TEMP = TEMP + QQ2(7)*QQ1(8) *
     1       (BE12F(V,W,Q(7),Q(1)) + BE12F(V,W,Q(7),Q(2))
     1                             + BE12F(V,W,Q(7),Q(3)) )
     1            + QQ2(8)*QQ1(7) *
     1       (BE12F(V,W,Q(8),Q(1)) + BE12F(V,W,Q(8),Q(2))
     1                             + BE12F(V,W,Q(8),Q(3)) )
      FBE12 = ALFAS*ALFPI*TEMP * V
      RETURN
      END
      DOUBLE PRECISION FUNCTION BE1F(V,QI,QF)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BE1=
     1 +QI**2*CF*NC**(-1)  *  (2./9.*V**(-1)+8./9.*V1)
     1 +QI**2*CF*NC**(-1)  *  LV*(2./3.*V**(-1)-4./3.*V1)
C
      BE1F = BE1
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBE1(V)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
         include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
      TEMP = 0.D0
      DO 10 II=1,6
C
       IF (II.GT.3)      GO TO 100
C
      IIA = II+3
      IK  = II+1
      IF(IK.GT.3)  IK=IK-3
      IKA = IK+3
      IL  = II+2
      IF(IL.GT.3)  IL=IL-3
      ILA = IL+3
C
      GO TO 200
C
100    CONTINUE
      IIA = II-3
      IK  = II+1
      IF (IK.GT.6) IK=IK-3
      IKA = IK-3
      IL=II+2
      IF (IL.GT.6) IL=IL-3
      ILA = IL-3
C
200   CONTINUE
      TEMP = TEMP + QQ2(II) * QQ1(IIA) *
     1      (BE1F(V,Q(II),Q(IK)) + BE1F(V,Q(II),Q(IL))
     1                           + BE1F(V,Q(II),Q(7)) )
10    CONTINUE
      TEMP = TEMP + (QQ2(7)*QQ1(8)+ QQ2(8)*QQ1(7)) *
     1       (BE1F(V,Q(7),Q(1)) + BE1F(V,Q(7),Q(2))
     1                            + BE1F(V,Q(7),Q(3)) )
      FBE1 = ALFAS*ALFPI*TEMP * V
      RETURN
      END
      DOUBLE PRECISION FUNCTION BE2F(V,W,QI,QF)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
       include "kine.f"
      COMMON/CHARGE/Q(8)
      save
C
       BE2=+QI**2*CF*NC**(-1)*(2./3.*V**(-1)-4./3.*V1)
C
      BE2F = BE2
      RETURN
      END
      DOUBLE PRECISION FUNCTION FBE2(V,W)
      implicit real*8(a-h,o-z)
	include "vari.f"
       include "facto.f"
	include "qcd.f"
        include "phoscale.f"
      include "kine.f"
      COMMON/CHARGE/Q(8)
      save
      TEMP = 0.
      DO 10 II=1,6
C
       IF (II.GT.3)      GO TO 100
C
      IIA = II+3
      IK  = II+1
      IF(IK.GT.3)  IK=IK-3
      IKA = IK+3
      IL  = II+2
      IF(IL.GT.3)  IL=IL-3
      ILA = IL+3
C
      GO TO 200
C
100    CONTINUE
      IIA = II-3
      IK  = II+1
      IF (IK.GT.6) IK=IK-3
      IKA = IK-3
      IL=II+2
      IF (IL.GT.6) IL=IL-3
      ILA = IL-3
C
200   CONTINUE
      TEMP = TEMP + QQ2(II) * QQ1(IIA) *
     1      (BE2F(V,W,Q(II),Q(IK)) + BE2F(V,W,Q(II),Q(IL))
     1                             + BE2F(V,W,Q(II),Q(7)) )
10    CONTINUE
      TEMP = TEMP + ( QQ2(7)*QQ1(8)+ QQ2(8)*QQ1(7) ) *
     1       (BE2F(V,W,Q(7),Q(1)) + BE2F(V,W,Q(7),Q(2))
     1                            + BE2F(V,W,Q(7),Q(3)) )
      FBE2 = ALFAS*ALFPI*TEMP * V
      RETURN
      END
